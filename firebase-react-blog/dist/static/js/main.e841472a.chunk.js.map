{"version":3,"sources":["components/User/userDefaultImage.png","config/fbConfig.js","store/modules/auth.js","components/common/Navbar/SignedInLink.js","components/common/Navbar/SignedOutLink.js","components/common/Footer/Footer.js","components/common/Header/Header.js","components/common/PageTemplate/PageTemplate.js","containers/AboutWrapper/AboutWrapper.js","pages/AboutPage.js","containers/SignInWrapper/SignInWrapper.js","pages/SignInPage.js","components/Contact/Notifications.js","components/Contact/ContactSummary.js","components/Contact/ContactList.js","store/modules/contact.js","containers/ContactWrapper/ContactWrapper.js","pages/ContactPage.js","components/Contact/ContactDetails.js","containers/ContactDetailsWrapper/ContactDetailsWrapper.js","pages/ContactDetailsPage.js","containers/CreateContact/CreateContactWrapper.js","pages/CreactContactPage.js","pages/NotFoundPage.js","containers/PortfolioWrapper/PortfolioWrapper.js","pages/PortfolioPage.js","components/TimelineCards/TimelineCards.js","store/modules/timeLine.js","containers/TimelineWrapper/TimelineWrapper.js","pages/TimelinePage.js","components/User/User.js","containers/UserWrapper/UserWrapper.js","pages/UserPage.js","components/App.js","store/modules/portfolio.js","store/index.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","fbConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","fireStore","firestore","settings","timestampsInSnapshots","fireAuth","auth","authSignOutSuccess","createAction","authSignCheckOk","authSignCheckNo","authSignOutTk","dispatch","getState","signOut","then","a","authCheckTk","onAuthStateChanged","user","handleActions","_handleActions","Object","defineProperty","state","action","objectSpread","isSignedIn","payload","userId","authError","message","withStyles","theme","toolbar","mixins","materialIcons","marginRight","props","classes","pathname","open","handleClose","handleClickOpen","handleCloseSignOut","react_default","createElement","index_es","xsDown","className","component","Link","to","selected","concat","onClick","onClose","aria-labelledby","aria-describedby","id","color","autoFocus","_root","root","breakpoints","up","left","width","down","spacing","unit","container","variant","align","Header","mobileOpen","_this","setState","console","log","handleDrawerToggle","componentDidMount","_this$props","this","children","location","position","appBar","aria-label","menuButton","Menu_default","noWrap","drawer","xsUp","implementation","paper","drawerPaper","Navbar_SignedInLink","Navbar_SignedOutLink","content","common_Footer_Footer","Component","compose","withRouter","display","flexShrink","zIndex","flexGrow","padding","connect","redirect","bindActionCreators","PageTemplate","_ref","style","marginBottom","common_Header_Header","AboutWrapper","mainFeaturedPost","item","md","mainFeaturedPostContent","gutterBottom","paragraph","mainGrid","xs","markdown","elevation","sidebarAboutBox","sidebarSection","button","window","target","icon","focusable","viewBox","aria-hidden","d","_mainFeaturedPostCont","backgroundColor","palette","grey","common","white","paddingRight","marginTop","textAlign","height","AboutPage","common_PageTemplate_PageTemplate","containers_AboutWrapper_AboutWrapper","SignInWrapper","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","FacebookAuthProvider","GithubAuthProvider","callbacks","signInSuccess","Redirect","card","marginAuto","StyledFirebaseAuth_default","firebaseAuth","_card","margin","SignInPage","containers_SignInWrapper_SignInWrapper","Notifications","notifications","map","key","dist_default","fromNow","time","toDate","title","fontSize","overflow","textOverflow","whiteSpace","inlineBlock","chip","contact","authorName","createdAt","format","toString","contentType","label","contactList","Fragment","i","Contact_ContactSummary","getContact","getContactList","getContactListLoad","createContact","createContactError","getNotifications","deleteContact","deleteContactError","deleteContactTk","email","authorId","collection","doc","delete","List","filter","catch","err","getContactTk","contactFind","find","n","getContactListTk","lastBoard","countList","exists","rows","fireStorage","storage","ContactListFirst","orderBy","startAfter","limit","get","querySnapshot","forEach","childData","data","filePath","ref","child","getDownloadURL","url","DownloadUrl","push","docs","length","getNotificationsTk","createContactTk","stateContactList","firebaseUser","currentUser","Time","Date","submitList","index","findIndex","toConsumableArray","slice","getTime","file","put","snapshot","set","name","changeFileName","displayName","metadata","fullPath","contact_handleActions","loading","ContactWrapper","isLoading","create","openTooltops","_infiniteScroll2","scrollHeight","Math","max","document","documentElement","body","scrollTop","clientHeight","handleTooltipClose","handleTooltipOpen","handleCloseSignIn","addEventListener","direction","justify","alignItems","helpGrid","onClickAway","PopperProps","disablePortal","disableFocusListener","disableHoverListener","disableTouchListener","Contact_Notifications","contactListGrid","Contact_ContactList","absoluteProgress","progress","minWidth","right","bottom","timeLine","ContactPage","containers_ContactWrapper_ContactWrapper","img","maxHeight","src","ContactDetailsWrapper","contactDelete","_this$state","Contact_ContactDetails","handleCloseDelete","ContactDetailsPage","match","params","containers_ContactDetailsWrapper_ContactDetailsWrapper","CreateContactWrapper","handleChange","event","value","handleFileChange","e","files","handleSubmit","preventDefault","handleCloseCreate","textField","onChange","multiline","rowsMax","type","marginLeft","CreactContactPage","CreateContact_CreateContactWrapper","NotFoundPage","AutoPlaySwipeableViews","autoPlay","SwipeableViews","tutorialSteps","imgPath","description","PortfolioWrapper","activeStep","handleNext","prevState","handleBack","handleStepChange","maxSteps","Button_default","Paper_default","square","header","Typography_default","href","axis","onChangeIndex","enableMouseEvents","step","abs","alt","expandIcon","ExpandMore_default","heading","MobileStepper_default","steps","mobileStepper","nextButton","size","disabled","KeyboardArrowRight_default","backButton","KeyboardArrowLeft_default","_img","maxWidth","justifyContent","paddingLeft","background","default","fontWeight","typography","fontWeightRegular","PortfolioPage","containers_PortfolioWrapper_PortfolioWrapper","TimelineCards","dt","dd","class","getTimeline","getTimelineLoad","getTimeListLoad","TimeListFirst","timeLine_handleActions","timelines","TimelineWrapper","_infiniteScroll","components_TimelineCards_TimelineCards","assign","CircularProgress_default","TimelinePage","containers_TimelineWrapper_TimelineWrapper","media","paddingTop","photoURL","image","userDefaultImage","Delete_default","UserWrapper","userDelete","components_User_User","flexDirection","UserPage","containers_UserWrapper_UserWrapper","App","Switch","Route","exact","path","reducers","combineReducers","portfolio","store","createStore","applyMiddleware","thunk","Root","es","BrowserRouter","components_App","Boolean","hostname","createMuiTheme","primary","teal","secondary","main","light","dark","useNextVariants","fontFamily","join","fontWeightMedium","ReactDOM","render","core_styles","src_Root","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e841472a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/userDefaultImage.2fcd8344.png\";","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\n  // Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyBV6vnnfRhB89PsOMSiQxWwHfaa6HeGNnM\",\r\n    authDomain: \"fir-react-blog.firebaseapp.com\",\r\n    databaseURL: \"https://fir-react-blog.firebaseio.com\",\r\n    projectId: \"fir-react-blog\",\r\n    storageBucket: \"fir-react-blog.appspot.com\",\r\n    messagingSenderId: \"811250927565\"\r\n  };\r\n  \r\n  const fbConfig =firebase.initializeApp(config);\r\n  \r\n  const fireStore = fbConfig.firestore();\r\n  fireStore.settings({ timestampsInSnapshots: true});\r\n\r\n        \r\n  const fireAuth = firebase.auth();\r\n  export {fireStore, fireAuth }\r\n  export default fbConfig;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport { fireAuth } from '../../config/fbConfig';\r\n\r\n// action type\r\nconst AUTH_SIGN_OUT_SUCCESS = 'AUTH_SIGN_OUT_SUCCESS';\r\nconst AUTH_SIGN_CHECK_OK = 'AUTH_SIGN_CHECK_OK';\r\nconst AUTH_SIGN_CHECK_NO = 'AUTH_SIGN_CHECK_NO';\r\n\r\n// action creators\r\nconst authSignOutSuccess = createAction(AUTH_SIGN_OUT_SUCCESS);\r\nconst authSignCheckOk = createAction(AUTH_SIGN_CHECK_OK);\r\nconst authSignCheckNo = createAction(AUTH_SIGN_CHECK_NO);\r\n\r\nexport const authSignOutTk = () => {\r\n    return (dispatch, getState) =>{\r\n        fireAuth.signOut().then((a)=>{\r\n            dispatch(authSignOutSuccess())}\r\n        );\r\n    }\r\n}\r\n\r\nexport const authCheckTk = () => {\r\n    return (dispatch,getState) => {\r\n        fireAuth.onAuthStateChanged(user => {\r\n            // firebase auth 에서 인증상태를 감시하기 위하여 사용, 인증 상태가 변경될때마다 작용, 로그인 또는 로그아웃시\r\n            if(user){\r\n                dispatch(authSignCheckOk(user));\r\n            }else{\r\n                dispatch(authSignCheckNo());\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    userId:'',\r\n    authError:'',\r\n    message:'',\r\n    isSignedIn:false\r\n}\r\n\r\nexport default handleActions({\r\n    [AUTH_SIGN_OUT_SUCCESS]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            isSignedIn:false\r\n        }\r\n    },\r\n\r\n    [AUTH_SIGN_CHECK_OK]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            isSignedIn:true,\r\n            user:action.payload\r\n        }\r\n    },\r\n    [AUTH_SIGN_CHECK_NO]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            isSignedIn:false,\r\n            user:''\r\n        }\r\n    },\r\n},initialState);","import React from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Hidden, MenuList, MenuItem, Divider, Dialog, DialogTitle, DialogActions, Button, DialogContent, DialogContentText } from '@material-ui/core';\r\nimport {} from '@material-ui/icons/AssignmentInd'\r\n\r\n\r\nconst styles = theme => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    materialIcons : {\r\n        marginRight: '10px'\r\n    }\r\n});\r\n\r\nconst SignedInLink = (props) => {\r\n    const { classes, pathname , open, handleClose, handleClickOpen,handleCloseSignOut} = props;  \r\n    return (\r\n            <div>\r\n                <Hidden xsDown>\r\n                    <div className={classes.toolbar} />\r\n                </Hidden>\r\n                <MenuList>\r\n                    <MenuItem component={Link} to=\"/\" selected={'/' === pathname}>\r\n                    <i className={`${classes.materialIcons} material-icons`}>\r\n                        sentiment_very_satisfied\r\n                    </i>\r\n                        About\r\n                    </MenuItem>\r\n                    <Divider />\r\n                    <MenuItem component={Link} to=\"/timeline\" selected={'/timeline' === pathname}>\r\n                    <i className={`${classes.materialIcons} material-icons`}>\r\n                        timeline\r\n                    </i>\r\n                        Timeline\r\n                    </MenuItem>\r\n                    <Divider />\r\n                    <MenuItem component={Link} to=\"/portfolio\" selected={'/portfolio' === pathname}>\r\n                    <i className={`${classes.materialIcons} material-icons`}>\r\n                        import_contacts\r\n                    </i>\r\n                        Portfolio\r\n                    </MenuItem>\r\n                    <Divider />\r\n                    <MenuItem component={Link} to=\"/contact\" selected={'/contact' === pathname}>\r\n                    <i className={`${classes.materialIcons} material-icons`}>\r\n                        forum\r\n                    </i>\r\n                        Contact\r\n                    </MenuItem>\r\n                    <Divider />\r\n                    <MenuItem component={Link} to=\"/user\" selected={'/user' === pathname}>\r\n                    <i className={`${classes.materialIcons} material-icons`}>\r\n                        assignment_ind\r\n                    </i>\r\n                        User\r\n                    </MenuItem>\r\n                    <Divider />\r\n                    <MenuItem onClick={()=>handleClickOpen()}>\r\n                    <i className={`${classes.materialIcons} material-icons`}>\r\n                       sentiment_dissatisfied\r\n                    </i>\r\n                     LogOut\r\n                    </MenuItem>\r\n                    <Divider />\r\n                </MenuList>\r\n\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n                    <DialogTitle id=\"alert-dialog-title\">\r\n                        {\"로그아웃 하시겠습니까?\"}\r\n                        </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            다음에 또 뵙겠습니다~! :)\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                            돌아가기\r\n                        </Button>\r\n                        <Button onClick={handleCloseSignOut} color=\"primary\" autoFocus>\r\n                            로그아웃\r\n                        </Button>\r\n                    </DialogActions>\r\n                    </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default withStyles(styles)(SignedInLink);","import React from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Hidden, MenuList, MenuItem, Divider } from '@material-ui/core';\r\n\r\n\r\nconst styles = theme => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    materialIcons : {\r\n        marginRight: '10px'\r\n    }\r\n});\r\n\r\nconst SignedOutLink = (props) => {\r\n    const { classes, pathname } = props;\r\n    return ( \r\n        <div>\r\n            <Hidden xsDown>\r\n                <div className={classes.toolbar} />\r\n            </Hidden>\r\n            <MenuList>\r\n                <MenuItem component={Link} to=\"/\" selected={'/' === pathname}>\r\n                <i className={`${classes.materialIcons} material-icons`}>\r\n                    sentiment_very_satisfied\r\n                </i>\r\n                    About\r\n                </MenuItem>\r\n                <Divider />\r\n                <MenuItem component={Link} to=\"/timeline\" selected={'/timeline' === pathname}>\r\n                <i className={`${classes.materialIcons} material-icons`}>\r\n                    timeline\r\n                </i>\r\n                    Timeline\r\n                </MenuItem>\r\n                <Divider />\r\n                <MenuItem component={Link} to=\"/portfolio\" selected={'/portfolio' === pathname}>\r\n                <i className={`${classes.materialIcons} material-icons`}>\r\n                    import_contacts\r\n                </i>\r\n                    Portfolio\r\n                </MenuItem>\r\n                <Divider />\r\n                <MenuItem component={Link} to=\"/contact\" selected={'/contact' === pathname}>\r\n                <i className={`${classes.materialIcons} material-icons`}>\r\n                    forum\r\n                </i>\r\n                    Contact\r\n                </MenuItem>\r\n                <Divider />\r\n                <MenuItem component={Link} to=\"/signin\" selected={'/signin' === pathname}>\r\n                <i className={`${classes.materialIcons} material-icons`}>\r\n                  person_add\r\n                </i>\r\n                    Login\r\n                </MenuItem>\r\n                <Divider />\r\n            </MenuList>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(SignedOutLink);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {withStyles, Grid, Typography, Button } from '@material-ui/core';\r\nconst styles = theme => ({\r\n  root : {\r\n    [theme.breakpoints.up('sm')]: {\r\n      left: '240px',\r\n      width: '100vw',\r\n    }, \r\n         [theme.breakpoints.down('sm')]: {\r\n          left: '0',\r\n          width: '100vw',\r\n    },\r\n    position:'fixed',\r\n    bottom:0,\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit,\r\n  }\r\n})\r\nconst Footer = (props) => {\r\n  const { classes} =props;\r\n    return (\r\n\r\n        <footer className={classes.root}>\r\n            <Grid container>\r\n            <Typography variant=\"body1\"  align=\"center\" color=\"textSecondary\" component=\"p\">© 2019 Copyright WooJeongMin. All rights reserved.</Typography>\r\n            </Grid>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Footer);","import React,{Component, Children} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport {authSignOutTk, authCheckTk } from '../../../store/modules/auth';\r\nimport SignedInLink from '../Navbar/SignedInLink';\r\nimport SignedOutLink from '../Navbar/SignedOutLink';\r\nimport { CssBaseline, AppBar, IconButton, Toolbar, Typography, Hidden, Drawer, withStyles, MenuList, MenuItem } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { compose } from 'recompose'\r\nimport Footer from '../Footer/Footer';\r\n\r\nconst drawerWidth = 240;\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      position:'relative'\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer +1\r\n    },\r\n    menuButton: {\r\n      marginRight: 20,\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing.unit,\r\n    }\r\n  });\r\n\r\nclass Header extends Component{\r\n    state = {\r\n        open: false,\r\n        mobileOpen: false,\r\n      };\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n        console.log('handleClickOpen')\r\n      };\r\n    \r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n      };\r\n    \r\n    handleCloseSignOut = () => {\r\n        this.setState({ open: false });\r\n        this.props.authSignOutTk();\r\n      };\r\n    handleDrawerToggle = () => {\r\n        this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n      };\r\n    componentDidMount = () => {\r\n        this.props.authCheckTk();\r\n        // this.props.getUserInfoTk();\r\n    }\r\n    // signIn signOut 에 따라 다르게 보여줘야된다.\r\n    render(){\r\n        const { classes,children,location } =this.props;\r\n        const {mobileOpen} = this.state;\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                  <Toolbar>\r\n                    <IconButton\r\n                      color=\"inherit\"\r\n                      aria-label=\"Open drawer\"\r\n                      onClick={this.handleDrawerToggle}\r\n                      className={classes.menuButton}\r\n                    >\r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                      Minhan's Blog\r\n                    </Typography>\r\n                    <i className={`${classes.materialIcons} material-icons`}>\r\n                            code\r\n                        </i>\r\n                  </Toolbar>\r\n                </AppBar>\r\n                {/* 상단까지는 Header */}\r\n                <nav className={classes.drawer}>\r\n                  <Hidden xsUp implementation=\"css\">\r\n                    <Drawer\r\n                      container={this.props.container}\r\n                      variant=\"temporary\"\r\n                      open={mobileOpen}\r\n                      onClose={this.handleDrawerToggle}\r\n                      classes={{\r\n                        paper: classes.drawerPaper,\r\n                      }}\r\n                    >\r\n                    {this.props.isSignedIn ?\r\n                     <SignedInLink \r\n                     pathname={location.pathname} \r\n                     open={this.state.open}\r\n                    handleClose={this.handleClose}\r\n                    handleClickOpen={this.handleClickOpen}\r\n                    handleCloseSignOut={this.handleCloseSignOut}\r\n                     /> \r\n                    : <SignedOutLink pathname={location.pathname}/>}\r\n                    </Drawer>\r\n                  </Hidden>\r\n                  <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                      classes={{\r\n                        paper: classes.drawerPaper,\r\n                      }}\r\n                      variant=\"permanent\"\r\n                      open\r\n                    >\r\n                      {this.props.isSignedIn ?\r\n                         <SignedInLink \r\n                         pathname={location.pathname} \r\n                         open={this.state.open}\r\n                        handleClose={this.handleClose}\r\n                        handleClickOpen={this.handleClickOpen}\r\n                        handleCloseSignOut={this.handleCloseSignOut}\r\n                         /> \r\n                         : \r\n                         <SignedOutLink pathname={location.pathname}/>}\r\n                    </Drawer>\r\n                  </Hidden>\r\n                  {/* 여기서는 크기에따라 보여주는지 안보여주는지를 적음 */}\r\n                </nav>\r\n                \r\n                <main className={classes.content}>\r\n                  <div className={classes.toolbar} />\r\n                  {children}\r\n                  <Footer/>\r\n                </main>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        isSignedIn : state.auth.isSignedIn,\r\n        redirect: state.auth.redirect\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        authSignOutTk : bindActionCreators(authSignOutTk,dispatch),\r\n        authCheckTk : bindActionCreators(authCheckTk,dispatch)\r\n    }\r\n}\r\nexport default compose(\r\n    withRouter,\r\n    withStyles(styles),\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n)(Header);","import React from 'react';\r\nimport Header from '../Header/Header';\r\n\r\n// 만들기전에는 생각을 안했으나, 현재 각각의 Page별로 파일을 만들어 놓는것보다\r\n// PageTemplate를 고차함수로 만들어서 Container에 곧장 넣었어도 되었을법도 하다.\r\nconst PageTemplate = ({children}) => {\r\n    return (\r\n        <div className=\"page-template\" style={{marginBottom:'55px'}}>\r\n            <Header>\r\n                {children}\r\n            </Header>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageTemplate;","import React, { Component } from 'react';\r\nimport { Paper, Grid, Typography, withStyles, Divider, Button } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    mainFeaturedPost: {\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing.unit* 4\r\n      },\r\n      mainFeaturedPostContent: {\r\n        padding: `${theme.spacing.unit * 2}px`,\r\n        [theme.breakpoints.up('md')]: {\r\n          paddingRight: 0,\r\n          padding: `${theme.spacing.unit * 6}px`,\r\n        },\r\n        mainGrid: {\r\n          marginTop: theme.spacing.unit * 3,\r\n        },\r\n        markdown: {\r\n          padding: `${theme.spacing.unit * 3}px 0`,\r\n        },\r\n      },\r\n      sidebarAboutBox: {\r\n        padding: theme.spacing.unit * 2,\r\n        backgroundColor: theme.palette.grey[200],\r\n      },\r\n      button: {\r\n        textAlign:'center',\r\n        padding:'0'\r\n      },\r\n      icon: {\r\n        width:'25px',\r\n        height:'25px'\r\n      }\r\n})\r\n\r\nclass AboutWrapper extends Component {\r\n    render() {  \r\n        const { classes } = this.props;\r\n        return (\r\n        <div>\r\n          <Paper className={classes.mainFeaturedPost}>\r\n            <Grid container>\r\n              <Grid item md={10}>\r\n                <div className={classes.mainFeaturedPostContent}>\r\n                  <Typography component=\"h1\" variant=\"h4\" color=\"inherit\" gutterBottom>\r\n                    방문해주셔서 감사합니다! :)\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" color=\"inherit\" paragraph>\r\n                    저 자신에 대해서 나열하기 위한 사이트입니다.\r\n                    <br/>\r\n                    About 페이지에서는 이 블로그가 어떤 식으로 만들어졌는가와 고민을 했던 것들에 대해서 적어보았습니다.\r\n                  </Typography>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n          <Grid container spacing={40} className={classes.mainGrid}>\r\n            {/* Main content */}\r\n            <Grid item xs={12} md={8}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                제작자에 대해서\r\n              </Typography>\r\n              <Divider />\r\n                <Typography variant=\"body2\" className={classes.markdown} gutterBottom>\r\n                    대학교에서는 네트워크와 운영체제, 알고리즘과 자료구조, C, C++, 등을 배웠으며, 언어와 기술을 배우는 것을 좋아합니다.\r\n                    <br/>\r\n                    졸업 학기부터 회사를 다니게 되어, 첫 개발의 시작을 Java 웹 서버로 시작하였으나, \r\n                    Javascript의 재미를 느끼고 React를 공부하게 되었습니다.\r\n                    <br/>\r\n                    함수형 자바스크립트의 커링구조, 고차함수, 순수함수 등을 공부하고 적용하려고 합니다.\r\n                 </Typography>\r\n\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                블로그를 만들며\r\n              </Typography>\r\n              <Divider />\r\n                <Typography variant=\"body2\" className={classes.markdown} gutterBottom>\r\n                    이 사이트를 만들기 전에는 서버를 nodeJs 또는 스프링으로 고민을 하다가, react 개발자로 전환을\r\n                    하고자 하는 것이 목적이기에, 빠르게 구현하는 것을 목표로 하여 firebase로 NoSQL 데이터베이스인 firestore와\r\n                    파일 등을 담고자 할 때 쓰는 firebase storage, 그리고 인증 기능을 구현하는 firebase auth 등을 사용하였고,\r\n                    firebase에서 제공하는 함수와 호스팅을 제공받았습니다.\r\n                    <br/>\r\n                    처음에는 사이트 구조를 기획하고, DB를 어느 정도 설계한 후, 벤치마킹할 사이트를 찾은 뒤 진행하였으며,\r\n                    Page와 redux를 위한 store, 뷰를 담당할 컴포넌트 폴더와 redux와의 소통을 위한 컨테이너 폴더를 생성하였습니다.\r\n                    그 후, firebase의 기능들을 통해 값을 주고받고 수정, 삭제, 인증 기능 등을 먼저 구현을 한 뒤,\r\n                    Material-UI를 입히는 작업을 시작하였습니다.\r\n                    <br/>\r\n                    가장 어려웠던 부분은, Firestore의 특성상 페이지 네이션 구현은 가능하지만, 만들 때는 모든 데이터베이스의 값을 가져와야 해서,\r\n                    초기 사이트 접속에서 많은 시간을 잡아먹을 수 있다는 점입니다.\r\n                    그래서 차선책으로 무한 스크롤을 구현을 하려 하였으나, 현재는 PC버전에서만 정상작동을 하고 모바일에서는 정상작동을 하지 않아 시도 중입니다.\r\n                    그외에는 JAVA 서버 개발자로 첫 시작을 하였던 저에게는, firebase와 material-ui는 이번 기회에 첫 접하게 된 것이고, 문서도\r\n                    한글 번역이 안 되어있거나, 명확하지 않아서 구글 영어 검색과 youtube 외국 강의 등을 많이 참고하였습니다.\r\n                    <br/>\r\n                    디자인까지 끝난 시점에서는, 오류를 줄이기 위한 리팩토링을 시작합니다.\r\n                    propsType과 defaultProps 등을 추가하고, 작성된 코드들을 명확하게 폴더, 문서별로 나누어져 있는지 확인하며, Promise를\r\n                    반환하는 함수들은 async&await로 바꾸어서 가독성을 높이고자 합니다.\r\n                    또한, redux-thunk를 사용하였지만, redux-saga도 브런치를 나누어서 사용하고자 하며, Typescript 스터디를 진행 중이기에,\r\n                    적용하며, jest로 테스팅을 고려 중입니다.\r\n                    <br/>\r\n                    첫 회사를 나와 프론트 개발자로 다시금 시작하고자 이 사이트를 만들게 되었으며,\r\n                    첫 포트 폴리오로써, 사이트를 만들면서 그동안 배운 지식들을 적용하고,\r\n                    새로운 기술들을 배울 수 있게 되어 얻는 것이 많았습니다.\r\n                 </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              <Paper elevation={0} className={classes.sidebarAboutBox}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    관심\r\n                </Typography>\r\n                <Typography gutterBottom>\r\n                 저에 대해서 궁금하시거나, react, material-ui, fireabase로 \r\n                  만들어진 이 사이트가 궁금하시다면, connact 페이지에 글을 올려주시거나,\r\n                  이메일로 연락을 주세요!\r\n                  </Typography>\r\n              </Paper>\r\n                <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\r\n                    연락\r\n                </Typography>\r\n                    <Typography  variant=\"body1\">\r\n                    Email  : minhan_a@naver.com\r\n                    </Typography>\r\n                    <Typography  variant=\"body1\">\r\n                    github : \r\n                    <Button className={classes.button} onClick={() => { window.location = 'https://github.com/whoo3474'; return null;} } target=\"_blank\">\r\n                    <svg className={classes.icon} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                        <g>\r\n                        <path d=\"M12,2C6.48,2 2,6.48 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12C22,6.48 17.52,2 12,2Z\">\r\n                        </path>\r\n                        </g>\r\n                    </svg>\r\n                    </Button>\r\n                    </Typography>\r\n                </Grid>\r\n        \r\n            </Grid>\r\n        \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AboutWrapper);","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport AboutWrapper from '../containers/AboutWrapper/AboutWrapper'\r\n\r\nconst AboutPage = () => {\r\n    return (\r\n        <PageTemplate>\r\n           <AboutWrapper/>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default AboutPage;","import React, { Component } from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport fbConfig from '../../config/fbConfig';\r\nimport { Grid, Typography, withStyles, Card, CardContent, Paper } from '@material-ui/core';\r\nconst styles = theme=> ({\r\n    card: {\r\n        display:\"flex\",\r\n        flexGrow: 1,\r\n        margin:'50px auto',\r\n        [theme.breakpoints.up('sm')]:{\r\n            width: '500px'\r\n        },\r\n            width: '350px'\r\n    },\r\n    marginAuto:{\r\n        margin:'20px auto',\r\n    },\r\n    textAlign:{\r\n        textAlign: 'center',\r\n    }\r\n  });\r\nclass SignInWrapper extends Component {\r\n\r\n    uiConfig ={\r\n        signInFlow:\"popup\",\r\n        signInOptions: [\r\n            firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n            firebase.auth.GithubAuthProvider.PROVIDER_ID\r\n        ],\r\n        callbacks: {\r\n            signInSuccess: ()=> console.log(\"가입 성공\")\r\n        }\r\n    }\r\n    render() {\r\n        const { authError,user,classes } = this.props;\r\n        if(!!user) return <Redirect to='/'/>\r\n        return (\r\n                <Card className={classes.card}>\r\n                    <CardContent className={classes.marginAuto}>\r\n                    <Typography className={classes.textAlign} component=\"h3\" variant=\"display2\" gutterBottom>로그인 / 회원가입</Typography>\r\n                 \r\n                    <StyledFirebaseAuth\r\n                    className={classes.marginAuto}\r\n                    uiConfig={this.uiConfig}\r\n                    firebaseAuth={fbConfig.auth()}/>\r\n                    </CardContent>\r\n                </Card>\r\n    \r\n               \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        isSignedIn : state.auth.isSignedIn,\r\n        user : state.auth.user\r\n    }\r\n}\r\nexport default  withStyles(styles)(connect(mapStateToProps)(SignInWrapper));","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport SignInWrapper from '../containers/SignInWrapper/SignInWrapper';\r\n\r\nconst SignInPage = () => {\r\n    return (\r\n        <PageTemplate>\r\n            <SignInWrapper/>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default SignInPage;","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { Grid,Typography, Divider } from '@material-ui/core';\r\n\r\n// contactWrapper에서 보여줌\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n                <Grid>\r\n                    <Typography variant=\"h4\" gutterBottom>알림창</Typography>\r\n                    <ul className=\"notifications\">\r\n                        <li>\r\n                            { notifications && notifications.map( item => {\r\n                                return (\r\n                                    <li key={item.id}>\r\n                                        <Typography variant=\"body1\" gutterBottom>{item.user} {item.content}</Typography>\r\n                                        <Moment fromNow>{item.time.toDate()?item.time.toDate():''}</Moment>\r\n                                        <Divider />\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </li>\r\n                    </ul>\r\n                </Grid>\r\n    );\r\n};\r\n\r\nexport default Notifications;","import React from 'react'\r\nimport { withStyles, Paper, Grid, Typography, Chip } from '@material-ui/core';\r\nimport Moment from 'react-moment';\r\n\r\nconst styles = theme => ({\r\n     paper: {\r\n         padding: `${theme.spacing.unit*3}px`,\r\n         width: '100%'\r\n     },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    content:{\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    width: '250px',\r\n    height: '20px',\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: '800px',\r\n    },\r\n    },\r\n    inlineBlock:{\r\n        display:'inline-block'\r\n    },\r\n    chip: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n\r\n  });\r\nconst ContactSummary = ({contact,key,classes}) => {\r\n    return (\r\n        <Paper id={key} className={classes.paper}>\r\n            <Grid>\r\n                    <Typography variant=\"h5\" component=\"h2\" gutterBottom>{contact.title}</Typography>\r\n                    <Typography className={classes.content} gutterBottom>{contact.content}</Typography>\r\n                    <Typography className={classes.title} color=\"textSecondary\">Posted by {contact.authorName||'이름없음'}</Typography>\r\n                    {contact.createdAt&&\r\n                    <Typography className={classes.inlineBlock}>\r\n                        <Moment format=\"YYYY/MM/DD\">{contact.createdAt.toDate().toString()}</Moment>\r\n                    </Typography>\r\n                    }\r\n                    {contact.contentType&&\r\n                        <Chip label={contact.contentType} className={classes.chip} variant=\"outlined\" />\r\n                    }\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(ContactSummary);","import React from 'react';\r\nimport ContactSummary from './ContactSummary';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, withStyles } from '@material-ui/core';\r\n\r\nconst styles= theme => ({\r\n    button:{\r\n        margin: `${theme.spacing.unit}px auto`,\r\n        width: '100%',\r\n      display: 'inlineBlock'\r\n    }\r\n})\r\n\r\n// contactWrapper에서 보여줌\r\nconst ContactList = ({contactList,classes}) => {\r\n\r\n    return (\r\n        <>\r\n            { contactList && contactList.map((contact,i) => {\r\n                return (\r\n                    <Button className={classes.button} component={Link} key={i} to={'/contact/'+contact.id }>\r\n                      <ContactSummary contact={contact} key={contact.id}/>\r\n                    </Button>\r\n                )\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(ContactList);","import { createAction, handleActions } from 'redux-actions';\r\nimport fbConfig,{fireStore} from '../../config/fbConfig';\r\nimport { componentFromStreamWithConfig } from 'recompose';\r\n\r\n\r\n// action type\r\nconst GET_CONTACT = 'GET_CONTACT';\r\nconst GET_CONTACT_LIST = 'GET_CONTACT_LIST';\r\nconst GET_CONTACT_LIST_LOAD = 'GET_CONTACT_LIST_LOAD';\r\nconst CREATE_CONTACT = 'CREATE_CONTACT';\r\nconst CREATE_CONTACT_ERROR = 'CREATE_CONTACT_ERROR';\r\nconst GET_NOTIFICATIONS = 'GET_NOTIFICATIONS';\r\nconst DELETE_CONTACT = 'DELETE_CONTACT';\r\nconst DELETE_CONTACT_ERROR = 'DELETE_CONTACT_ERROR';\r\n\r\n// action creators\r\nconst getContact = createAction(GET_CONTACT);\r\nconst getContactList = createAction(GET_CONTACT_LIST);\r\nconst getContactListLoad = createAction(GET_CONTACT_LIST_LOAD);\r\nconst createContact = createAction(CREATE_CONTACT);\r\nconst createContactError = createAction(CREATE_CONTACT_ERROR);\r\nconst getNotifications = createAction(GET_NOTIFICATIONS);\r\nconst deleteContact = createAction(DELETE_CONTACT);\r\nconst deleteContactError = createAction(DELETE_CONTACT_ERROR);\r\n\r\nexport const deleteContactTk= (id) => {\r\n    return (dispatch, getState) => {\r\n        const userEmail = getState().auth.user.email;\r\n        const contactAuthorId = getState().contact.contact.authorId;\r\n        if(userEmail==contactAuthorId){\r\n            fbConfig.firestore().collection('contacts').doc(id).delete()\r\n            .then(()=>{\r\n                const List = getState().contact.contactList.filter((contact)=>{\r\n                    return contact.id !== id\r\n                })\r\n                // id받아와서, 얘 아닌거만 필터로 골라서 ContactList로 만들어준다.\r\n                // 현재 리덕스의 store에서 값을 읽어서 Contact 페이지로 뿌려주는것이라\r\n                // 안해주면 지웠어도 새로고침 하기전까지 남아있음\r\n                dispatch(deleteContact(List))\r\n            }).catch((err)=>{\r\n                dispatch(deleteContactError())\r\n            })\r\n        }else{\r\n            dispatch(deleteContactError())\r\n        }\r\n    }\r\n}\r\n\r\nexport const getContactTk = (id) => {\r\n    return (dispatch, getState)=>{\r\n        const contactFind = getState().contact.contactList.find((n)=>{\r\n            return n.id===id\r\n        })\r\n            dispatch(getContact(contactFind));\r\n    };\r\n};\r\n\r\n\r\nexport const getContactListTk = () => {\r\n    return (dispatch, getState)=>{\r\n        const state = getState().contact;\r\n        const lastBoard = state.lastBoard;\r\n        const countList = state.countList;\r\n        const exists = state.exists;\r\n        const rows = []; \r\n\r\n        const fireStorage =fbConfig.storage();\r\n        let ContactListFirst =fbConfig.firestore().collection('contacts').orderBy('createdAt','desc');\r\n        if(!!exists){\r\n            if(!!lastBoard){\r\n                // lastBoard가 있다고? 그럼 startAfter로 너를 기준으로 limit만큼 찾아오자\r\n                ContactListFirst.startAfter(lastBoard).limit(countList).get().then((querySnapshot)=> {\r\n                    querySnapshot.forEach((doc) => {\r\n                        // 게시판을 for문으로 다 뽑을껀데 \r\n                        let childData = doc.data(); \r\n                        if(!!childData.filePath) {\r\n                            //  혹시 file 있니?\r\n                            fireStorage.ref().child(childData.filePath).getDownloadURL().then( url =>{\r\n                            childData.DownloadUrl= url;\r\n                            // 있으면 같이 store에 DownloadUrl로 저장 되렴\r\n                            })\r\n                        }\r\n                        rows.push(childData);\r\n                    });\r\n                    const lastBoard = querySnapshot.docs[querySnapshot.docs.length-1];\r\n                   dispatch(getContactList(rows));\r\n                   dispatch(getContactListLoad(lastBoard));\r\n                });\r\n            }else{\r\n                // 여긴 처음부터 시작하자. 첫시작은 너야\r\n                ContactListFirst.limit(countList).get().then((querySnapshot)=> {\r\n                    querySnapshot.forEach((doc) => {\r\n                        // 게시판을 for문으로 다 뽑을껀데 \r\n                        let childData = doc.data(); \r\n                        if(!!childData.filePath) {\r\n                            //  혹시 file 있니?\r\n                            fireStorage.ref().child(doc.data().filePath).getDownloadURL().then( url =>{\r\n                            childData.DownloadUrl= url;\r\n                            // 있으면 같이 store에 DownloadUrl로 저장 되렴\r\n                            })\r\n                        }\r\n                        rows.push(childData);\r\n                    });\r\n                    const lastBoard = querySnapshot.docs[querySnapshot.docs.length-1];\r\n                    dispatch(getContactList(rows));\r\n                   dispatch(getContactListLoad(lastBoard));\r\n                });\r\n            }\r\n        }\r\n\r\n    };\r\n};\r\n\r\nexport const getNotificationsTk = () => {\r\n    return (dispatch, getState)=>{\r\n        fbConfig.firestore().collection('notifications').orderBy('time','desc').limit(3).get()\r\n        .then((querySnapshot)=> {\r\n            let rows = []; \r\n            querySnapshot.forEach((doc) => { \r\n                let childData = doc.data(); \r\n                rows.push(childData);\r\n            });\r\n           dispatch(getNotifications(rows));\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const createContactTk = (contact) => {\r\n    return (dispatch, getState) => {\r\n        const stateContactList = getState().contact.contactList;\r\n        const firebaseUser = fbConfig.auth().currentUser;\r\n        const Time = new Date();\r\n        let firestore = fireStore.collection('contacts').doc();\r\n        let submitList = contact;\r\n        if(contact.id){\r\n            // 업데이트문을 위한 함수\r\n            firestore = fireStore.collection('contacts').doc(contact.id);\r\n            \r\n            const index = getState().contact.contactList.findIndex(item => item.id === contact.id)\r\n            if( index <= stateContactList.length){\r\n                submitList = [...stateContactList.slice(0,index), contact, ...stateContactList.slice(index+1, stateContactList.length)]\r\n            }\r\n            // firebase와 redux의 state를 따로 수정, 삭제, 저장을 해주어야 하는건가? 맞는 방법인지 모르겠다.\r\n        }\r\n        const fireStorage =fbConfig.storage().ref().child(`blog_img/${Time.getTime()}`);\r\n        if(contact.file){\r\n            fireStorage.put(contact.file).then((snapshot)=> {\r\n                firestore.set({\r\n                    ...contact,\r\n                    id:firestore.id,\r\n                    file: contact.file.name||'',\r\n                    changeFileName : Time.getTime(),\r\n                    authorName: firebaseUser.displayName||'이름없음',\r\n                    authorId:firebaseUser.email||'이메일없음',\r\n                    filePath: snapshot.metadata.fullPath||'',\r\n                    createdAt:Time,\r\n                    contentType:(snapshot.metadata.contentType=='image/png'||snapshot.metadata.contentType=='image/jpeg')?snapshot.metadata.contentType : ''\r\n                    // 저는 png나 jpeg가 아니면 파일을 안열어 주겠습니다.\r\n                }).then(() => {\r\n                    dispatch(createContact(submitList));\r\n                    // 스토리지에 저장\r\n                }).catch((err) => {\r\n                    dispatch(createContactError(err));\r\n                    })\r\n                });\r\n        }\r\n        else{\r\n            firestore.set({\r\n                ...contact,\r\n                id:firestore.id,\r\n                file: '',\r\n                changeFileName : '',\r\n                authorName: firebaseUser.displayName||'이름없음',\r\n                authorId:firebaseUser.email||'이메일없음',\r\n                filePath: '',\r\n                createdAt:Time\r\n            }).then(() => {\r\n            dispatch(createContact(submitList));\r\n                // 스토리지에 저장\r\n            }).catch((err) => {\r\n                dispatch(createContactError(err));\r\n                })\r\n        }\r\n            // 얘를 async/ await로 바꿔서 해보자\r\n    } \r\n};\r\n\r\n// initial state\r\nconst initialState = {\r\n    contactList:[],\r\n    contact:{},\r\n    notifications:[],\r\n    lastBoard:'',\r\n    // 마지막 인덱스\r\n    exists:true,\r\n    countList:2,\r\n    //한페이지에 출력될 게시물 수\r\n}\r\n\r\n// reducer\r\nexport default handleActions({\r\n    [GET_CONTACT_LIST] : (state,action) => {\r\n        return {\r\n            ...state,\r\n            loading:false,\r\n            contactList: [...state.contactList,...action.payload],\r\n        }\r\n   \r\n    },\r\n    [GET_CONTACT_LIST_LOAD] : (state,action) => {\r\n        return {\r\n            ...state,\r\n            loading:false,\r\n            lastBoard:action.payload,\r\n            exists: !!action.payload?(!!action.payload.exists?!!action.payload.exists:false):false\r\n        }\r\n    },\r\n    [GET_CONTACT] : (state,action) => {\r\n        return {\r\n            ...state,\r\n            contact: action.payload\r\n        }\r\n    },\r\n    [CREATE_CONTACT] : (state,action) => {\r\n        \r\n        return {\r\n            ...state,\r\n            contactList:[action.payload,...state.contactList]\r\n        }\r\n    },\r\n    [CREATE_CONTACT_ERROR] : (state,action) => {\r\n        return {\r\n            ...state,\r\n            contact:{}\r\n        }\r\n    },\r\n    [GET_NOTIFICATIONS] : (state,action) => {\r\n        return {\r\n            ...state,\r\n            notifications: action.payload\r\n        }\r\n    },\r\n    [DELETE_CONTACT] : (state,action) => {\r\n        return {\r\n            ...state,\r\n            contactList:[\r\n                ...action.payload\r\n            ],\r\n            message:'해당 게시물을 정상 삭제하였습니다.'\r\n        }\r\n    },\r\n    [DELETE_CONTACT_ERROR] : (state,action) => {\r\n        return {\r\n            ...state,\r\n            message:'글 작성자가 아니면 삭제가 불가능합니다.'\r\n        }\r\n    }\r\n}, initialState);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Redirect,Link } from 'react-router-dom';\r\nimport Notifications from '../../components/Contact/Notifications';\r\nimport ContactList from '../../components/Contact/ContactList';\r\nimport { getContactListTk, getNotificationsTk } from '../../store/modules/contact';\r\nimport { compose } from 'recompose'\r\nimport { Paper, Grid, Button, withStyles, Dialog, DialogActions, DialogTitle, CircularProgress, Zoom, Tooltip, ClickAwayListener } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width:'80%',\r\n        },\r\n        width:'100%',\r\n        margin: '20px auto',\r\n      flexGrow: 1,\r\n      padding: `0 ${theme.spacing.unit * 1.5}px`,\r\n    },\r\n    paper: {\r\n      minWidth: 'auto',\r\n      margin: `${theme.spacing.unit}px auto`,\r\n      padding: theme.spacing.unit * 2,\r\n      width: '100%'\r\n    },\r\n    button: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n    absoluteProgress:{\r\n        position:'absolute',\r\n        right:50,\r\n        bottom:-50,\r\n    },\r\n    progress: {\r\n      margin: theme.spacing.unit * 2,\r\n    },\r\n    helpGrid:{\r\n      margin: '10px 0'\r\n    }\r\n  });\r\n\r\n  const helpTooltip = `\r\n    Contact 페이지는 저에게 하고싶으신 말을 적으시는 페이지입니다.\r\n    알림창은 현재 회원가입을 하였거나, 게시글을 새로 작성하시면 알람이 올라갑니다.\r\n    게시글은 로그인을 하셔야 작성이 가능하며, 본인만 수정과 삭제가 가능합니다.\r\n    jpeg 와 png 형식의 파일만 올릴수있으며, 게시글안으로 들어가면 보실수 있습니다.\r\n    `\r\nclass ContactWrapper extends Component {\r\n    state={\r\n      isLoading:false,\r\n      open: false,\r\n      redirect:false,\r\n      create:false,\r\n      openTooltops:false\r\n    }\r\n    componentDidMount() {\r\n        this.props.getContactListTk();\r\n        this.props.getNotificationsTk();\r\n        if(!!this.props.exists)window.addEventListener('scroll',this._infiniteScroll2,true);\r\n    }\r\n    _infiniteScroll2 = () => {\r\n        let scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\r\n        let scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\r\n        let clientHeight = document.documentElement.clientHeight;\r\n        this.setState({\r\n            isLoading:false\r\n        });\r\n        if(scrollTop + clientHeight === scrollHeight){\r\n            this.setState({\r\n                isLoading:true\r\n            });\r\n            this.props.getContactListTk();\r\n            // 얘가 생성,수정을 한 후로는 2회 동시호출이 된다. Timeline,Contact포함\r\n        }\r\n    }\r\n    \r\n    handleTooltipClose = () => {\r\n      this.setState({ openTooltops: false });\r\n    };\r\n\r\n    handleTooltipOpen = () => {\r\n      this.setState({ openTooltops: true });\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        if(this.props.user){\r\n            this.setState({ create:true})\r\n        }\r\n        this.setState({ open: true, redirect: false})\r\n    };\r\n    \r\n    //CREATE 페이지에서도 로그인을 하지 않을시 signin 페이지로 리다이렉트 하게 만들었으나,\r\n    //로그인을 안한 사용자에게는 모달창을 보여주고 싶었음.\r\n    // render 에서 button을 로그인시, 로그인을 안할시 다르게 보여주려고 하였으나, 파이어베이스와 redux에서\r\n    // 해당 로그인 값을 가져오기전에 이미 render을 끝내놓아서 로그인을 안했을때 보여주는 버튼만 게속 나왔음.\r\n    // 간단하게 state에서 값을 조정하여, 리다이렉트를 하도록 만듦. ~ 현업에서는 어떨까?\r\n    \r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n      };\r\n    \r\n    handleCloseSignIn = () => {\r\n        this.setState({ open: false, redirect: true  });\r\n      };\r\n\r\n    render() {\r\n        const { contactList, notifications, classes} = this.props;\r\n        const { handleClose,handleCloseSignIn,handleClickOpen} = this;\r\n        if(this.state.redirect){return <Redirect to='/signin'/>}\r\n        else if(this.state.create){return <Redirect to='/create'/>}\r\n        return (\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"flex-start\"className={classes.root}>\r\n\r\n                <Grid container className={classes.helpGrid}>\r\n                    <ClickAwayListener onClickAway={this.handleTooltipClose}>\r\n                    <div>\r\n                        <Tooltip\r\n                        PopperProps={{\r\n                            disablePortal: true,\r\n                        }}\r\n                        onClose={this.handleTooltipClose}\r\n                        open={this.state.openTooltops}\r\n                        disableFocusListener\r\n                        disableHoverListener\r\n                        disableTouchListener\r\n                        title={helpTooltip}\r\n                        >\r\n                        <Button onClick={this.handleTooltipOpen}>\r\n                        <i className=\"material-icons\">\r\n                            help_outline\r\n                        </i>\r\n                        </Button>\r\n                        </Tooltip>\r\n                    </div>\r\n                    </ClickAwayListener>\r\n                </Grid>\r\n                <Paper className={classes.paper}>\r\n                    <Grid>\r\n                        <Notifications notifications={notifications}/>\r\n                    </Grid>\r\n                </Paper>\r\n                   <Button component=\"button\" color=\"primary\" onClick={() => handleClickOpen()} variant=\"contained\" className={classes.button}>\r\n                         게시글 생성\r\n                   </Button> \r\n                <Grid container className={classes.contactListGrid}>\r\n                        <ContactList contactList={contactList}/>\r\n                        {this.state.isLoading&&this.props.exists?\r\n                            (\r\n                            <div className={classes.absoluteProgress}>\r\n                               <CircularProgress className={classes.progress} />\r\n                            </div>)\r\n                              :\r\n                              ''}\r\n                </Grid>\r\n\r\n                <Dialog open={this.state.open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n                    <DialogTitle id=\"alert-dialog-title\">\r\n                        {\"글쓰기는 로그인이 필요합니다.\"}\r\n                        </DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                            돌아가기\r\n                        </Button>\r\n                        <Button onClick={handleCloseSignIn} color=\"primary\" autoFocus>\r\n                            로그인하러 가기\r\n                        </Button>\r\n                    </DialogActions>\r\n                    </Dialog>\r\n                </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contactList : state.contact.contactList,\r\n        notifications: state.contact.notifications,\r\n        exists:state.timeLine.exists,\r\n        user:state.auth.user\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getContactListTk : bindActionCreators(getContactListTk,dispatch),\r\n    getNotificationsTk : bindActionCreators(getNotificationsTk,dispatch)\r\n})\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n)(ContactWrapper);","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport ContactWrapper from '../containers/ContactWrapper/ContactWrapper';\r\n\r\nconst ContactPage = () => {\r\n    return (\r\n        <PageTemplate>\r\n            <ContactWrapper/>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default ContactPage;","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { withStyles,Paper, Grid, Typography, Button, Dialog, DialogTitle, DialogActions } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        padding: `${theme.spacing.unit*3}px`,\r\n        width: '100%'\r\n    },\r\n   title: {\r\n     fontSize: 14,\r\n   },\r\n    button: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n    img:{\r\n        maxHeight:'350px',\r\n    }\r\n  });\r\nconst ContactDetails = (props) => {\r\n    const {contact, classes,handleClickOpen,handleClose,open,redirect,message, id} = props;\r\n        if(redirect) return <Redirect to='/contact'/>\r\n        console.log('contact',contact)\r\n        return (\r\n               <>\r\n                    <Paper className={classes.paper}>\r\n                        <Grid>\r\n                        <Typography variant=\"h5\" component=\"h2\" gutterBottom>{contact.title}</Typography>\r\n                        <Typography className={classes.content} gutterBottom>{contact.content}</Typography>\r\n                        <Typography className={classes.title} color=\"textSecondary\">Posted by {contact.authorName||'이름없음'}</Typography>\r\n                        {contact.createdAt&&\r\n                        <Typography>\r\n                            <Moment format=\"YYYY/MM/DD\">{contact.createdAt.toDate().toString()}</Moment>\r\n                        </Typography>\r\n                        }\r\n                            {contact.DownloadUrl &&\r\n                            ((contact.contentType=='image/png'||contact.contentType=='image/jpeg')\r\n                            ?\r\n                                (<Grid item>\r\n                                    <img className={classes.img} src={contact.DownloadUrl}/>\r\n                                </Grid>)\r\n                            :'')\r\n                            }\r\n                            </Grid>\r\n                    </Paper>\r\n                    <Button \r\n                        component={Link}\r\n                        to={'/modify/'+id }\r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        className={classes.button} >\r\n                    수정\r\n                    </Button>\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.button}\r\n                        onClick={()=>handleClickOpen(contact.id)} >\r\n                    삭제\r\n                    </Button>\r\n\r\n                    <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n                        <DialogTitle id=\"alert-dialog-title\">\r\n                            {message}\r\n                            </DialogTitle>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                            확인\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </>\r\n        );\r\n\r\n};\r\n\r\nexport default withStyles(styles)(ContactDetails);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactDetails from '../../components/Contact/ContactDetails';\r\nimport { getContactTk, deleteContactTk } from '../../store/modules/contact';\r\nimport { bindActionCreators } from 'redux';\r\nclass ContactDetailsWrapper extends Component {\r\n    state = {\r\n        open: false,\r\n        redirect:false\r\n      };\r\n    \r\n      handleClickOpen = (id) => {\r\n        this.setState({ open: true });\r\n        this.contactDelete(id);\r\n      };\r\n    \r\n      handleClose = () => {\r\n        this.setState({ open: false, redirect:true });\r\n      };\r\n    \r\n      contactDelete = (id) => {\r\n        this.props.deleteContactTk(id);\r\n      }\r\n    componentDidMount() {\r\n        const id = this.props.id;\r\n        this.props.getContactTk(id);\r\n    }\r\n    render() {\r\n        const {contact, message, id} = this.props;\r\n        const {redirect, open} = this.state;\r\n        if(!!contact){\r\n        return(\r\n            <div>\r\n                <ContactDetails \r\n                    id={id}\r\n                    message={message}\r\n                    contact={contact} \r\n                    open={open}\r\n                    redirect={redirect}\r\n                    handleClose={this.handleClose} \r\n                    handleClickOpen={this.handleClickOpen}\r\n                    handleCloseDelete={this.handleCloseDelete}/>\r\n             </div>\r\n           );\r\n        }else {\r\n            return(\r\n                <div>\r\n                  <p>Loading ContactDetails......</p>\r\n                </div>\r\n                // 이거 작동을 안하나?\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact : state.contact.contact,\r\n        message : state.contact.message\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getContactTk : bindActionCreators(getContactTk,dispatch),\r\n    deleteContactTk : bindActionCreators(deleteContactTk,dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactDetailsWrapper);","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport ContactDetailsWrapper from '../containers/ContactDetailsWrapper/ContactDetailsWrapper';\r\n\r\nconst ContactDetailsPage = (props) => {\r\n    const id = props.match.params.id;\r\n    return (\r\n        <PageTemplate>\r\n            <ContactDetailsWrapper id={id}/>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default ContactDetailsPage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createContactTk, getContactTk } from '../../store/modules/contact';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { compose } from 'recompose'\r\nimport { withStyles, Dialog, DialogTitle, Button, DialogActions, Paper, TextField, Typography, Grid, Tooltip, Zoom, ClickAwayListener } from '@material-ui/core';\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n      padding:theme.spacing.unit*2,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: '100%',\r\n  },\r\n  helpGrid:{\r\n    margin: '10px 0'\r\n  },\r\n  button:{\r\n    margin: theme.spacing.unit,\r\n  }\r\n})\r\n\r\nconst helpTooltip = `\r\n    현재 페이지는 하나의 컴포넌트에서 수정과 생성이 가능하도록 만들었습니다.\r\n    수정과 생성이 비슷한 구조라는것을 생각하여, 수정버튼을 누르면 react-router-dom 으로\r\n    이동시키면서 props.match.params 값으로 해당 게시글의 id를 받아와서 id 유무로\r\n    수정과 생성 페이지로 나뉘게 만들었습니다.\r\n    `\r\n\r\nclass CreateContactWrapper extends Component {\r\n    state ={\r\n        title: '',\r\n        content:'',\r\n        file:'',\r\n        open:false,\r\n        redirect:false,\r\n        openTooltops:false\r\n    }\r\n    handleTooltipClose = () => {\r\n      this.setState({ openTooltops: false });\r\n    };\r\n\r\n    handleTooltipOpen = () => {\r\n      this.setState({ openTooltops: true });\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n          [name]: event.target.value,\r\n        });\r\n      };\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file : e.target.files[0]\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            open:true ,redirect: false\r\n        })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n      };\r\n    \r\n    handleCloseCreate = () => {\r\n        this.setState({ open: false, redirect: true, });\r\n        this.props.createContactTk(this.state);\r\n      };\r\n\r\n    componentDidMount(){\r\n        if(this.props.id){\r\n            this.props.getContactTk(this.props.id)\r\n            this.setState({\r\n                ...this.props.contact,\r\n                open:false,\r\n                file:'',\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { user, classes,id } = this.props;\r\n        const { handleClose,handleCloseCreate, handleFileChange, handleSubmit} = this;\r\n        if(!user) return <Redirect to='/signin'/>\r\n        else if(this.state.redirect) return <Redirect to='/contact'/>\r\n        return (\r\n            <>\r\n              <Grid container className={classes.helpGrid}>\r\n                <ClickAwayListener onClickAway={this.handleTooltipClose}>\r\n                  <div>\r\n                    <Tooltip\r\n                      PopperProps={{\r\n                        disablePortal: true,\r\n                      }}\r\n                      onClose={this.handleTooltipClose}\r\n                      open={this.state.openTooltops}\r\n                      disableFocusListener\r\n                      disableHoverListener\r\n                      disableTouchListener\r\n                      title={helpTooltip}\r\n                    >\r\n                      <Button onClick={this.handleTooltipOpen}>\r\n                      <i className=\"material-icons\">\r\n                        help_outline\r\n                      </i>\r\n                      </Button>\r\n                    </Tooltip>\r\n                  </div>\r\n                </ClickAwayListener>\r\n              </Grid>\r\n            <Paper className={classes.container}>\r\n                <form>\r\n                    <Typography variant='h4'> {id?'글 수정하기':'글 생성하기'}</Typography>\r\n                        <TextField\r\n                            id=\"outlined-name\"\r\n                            label=\"제목\"\r\n                            className={classes.textField}\r\n                            value={this.state.title}\r\n                            onChange={this.handleChange('title')}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            id=\"outlined-multiline-flexible\"\r\n                            label=\"내용\"\r\n                            multiline\r\n                            rowsMax=\"8\"\r\n                            value={this.state.content}\r\n                            onChange={this.handleChange('content')}\r\n                            className={classes.textField}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            />\r\n                    <input type=\"file\" id=\"file\" onChange={handleFileChange}/>\r\n                    <Grid>\r\n                        <Button className={classes.button}component=\"button\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>{id?'수정':'생성'}</Button>\r\n                    </Grid>\r\n                </form>\r\n\r\n                \r\n                <Dialog open={this.state.open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n                    <DialogTitle id=\"alert-dialog-title\">\r\n                          {`이대로 글을 올릴까요?`}\r\n                        </DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                            돌아가기\r\n                        </Button>\r\n                        <Button onClick={handleCloseCreate} color=\"primary\" autoFocus>\r\n                          {id?'수정하기':'생성하기'}\r\n                     </Button>\r\n                    </DialogActions>\r\n                    </Dialog>\r\n            </Paper>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.auth.user,\r\n        contact: state.contact.contact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createContactTk : bindActionCreators(createContactTk,dispatch),\r\n        getContactTk : bindActionCreators(getContactTk,dispatch),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n)(CreateContactWrapper);","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport CreateContactWrapper from '../containers/CreateContact/CreateContactWrapper';\r\n\r\nconst CreactContactPage = (props) => {\r\n    const id = props.match.params.id;\r\n    return (\r\n        <PageTemplate>\r\n            <CreateContactWrapper id={id}/>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default CreactContactPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <div>\r\n            NotFoundPage\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\nimport { Grid, Tooltip, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, ClickAwayListener } from '@material-ui/core';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: '버스 예약 사이트_사용자 ~ PC, Mobile',\r\n    imgPath:\r\n      'https://firebasestorage.googleapis.com/v0/b/fir-react-blog.appspot.com/o/portfolio%2FbusClient.PNG?alt=media&token=cbe76a45-21b5-48ba-8d61-041b899ed83a',\r\n    url:'http://mahatech.iptime.org:7007/',\r\n    description:`첫 회사에서 제작한 버스 예약 사용자 사이트입니다.\r\n    디자인회사와 협업하여 기능부터 DB설계, JAVA서버와 SQL, 호스팅, AWS ES2리눅스 서버, RDS-MariaDB까지 모든 부분을 도맡아 하였습니다.\r\n    아이디는 test, 비밀번호는 test로 들어가실수 있습니다.`\r\n  },\r\n  {\r\n    label: '버스 예약 사이트_관리자 ~ PC',\r\n    imgPath:\r\n      'https://firebasestorage.googleapis.com/v0/b/fir-react-blog.appspot.com/o/portfolio%2FbusAdmin.PNG?alt=media&token=128d4b2f-120f-4954-b47d-f1325d8ada00',\r\n    url:'http://mahatech.iptime.org:7007/admin',\r\n    description:`버스 예약 관리자 사이트입니다.\r\n    사용자 사이트에서 선택할수있는 모든 기능을 제어할수 있으며, 사용자 및 버스, 패널티등을 설정할수 있습니다.\r\n    아이디는 1, 비밀번호는 1로 들어가실수 있습니다.\r\n    관리자 계정으로는 사용자 사이트 접속이 가능하지만, 사용자 아이디로 관리자 사이트 접속이 불가능합니다.\r\n    현재 몇몇기능을 사용하기 좋게 기존에서 빼놓은 상태입니다.`\r\n  },\r\n  {\r\n    label: 'sass 연습페이지',\r\n    imgPath:\r\n      'https://firebasestorage.googleapis.com/v0/b/fir-react-blog.appspot.com/o/portfolio%2Fscss.PNG?alt=media&token=9d960992-970d-446d-a819-f2592370d7ca',\r\n    url:'https://whoo3474.github.io/LoremSassProject/',\r\n    description:`scss를 연습하기 위하여 만든 사이트입니다.`\r\n  },\r\n  {\r\n    label: '칵테일 페이지',\r\n    imgPath:\r\n      'https://firebasestorage.googleapis.com/v0/b/fir-react-blog.appspot.com/o/portfolio%2Fcocktail.PNG?alt=media&token=2371c757-fd92-4ea9-ad1a-33509116e757',\r\n    url:'https://whoo3474.github.io/cocktail-website/',\r\n    description:`css를 연습하기 위하여 만든 사이트입니다.`\r\n  }\r\n];\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n\r\n    [theme.breakpoints.up('sm')]: {\r\n      maxWidth: 400*2,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      maxWidth: 400*3,\r\n  },\r\n    maxWidth: '350px',\r\n    flexGrow: 1,\r\n    margin: '20px auto'\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    height: 50,\r\n    paddingLeft: theme.spacing.unit * 4,\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    [theme.breakpoints.up('sm')]: {\r\n        maxWidth: 400*2,\r\n        height: 255*2,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n       maxWidth: 400*3,\r\n        height: 255*3,\r\n    },\r\n    height: 255,\r\n    display: 'block',\r\n    maxWidth: 400,\r\n    overflow: 'hidden',\r\n    width: '100%',\r\n  },\r\n  helpGrid:{\r\n    margin: '10px 0'\r\n  },\r\n  heading: {\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  button:{\r\n    width: '145px',\r\n    padding: '6px'\r\n  }\r\n});\r\n\r\nconst helpTooltip = `\r\n  Portfolio 페이지는 js의 배열값들을 캐럿셀로 보여주는 페이지입니다.\r\n  Material-Ui의 AutoPlaySwipeableViews를 사용했으며, 상단의 버튼으로 사이트를 새창으로 띄워줍니다.\r\n  제가 만든 사이트들의 일부이며, 저의 gitHub에서 코드들을 확인하실수있습니다.\r\n`\r\n\r\nclass PortfolioWrapper extends Component {\r\n    state = {\r\n        activeStep: 0,\r\n        openTooltops:false\r\n      };\r\n    \r\n    handleTooltipClose = () => {\r\n      this.setState({ openTooltops: false });\r\n    };\r\n\r\n    handleTooltipOpen = () => {\r\n      this.setState({ openTooltops: true });\r\n    };\r\n        handleNext = () => {\r\n        this.setState(prevState => ({\r\n          activeStep: prevState.activeStep + 1,\r\n        }));\r\n      };\r\n    \r\n      handleBack = () => {\r\n        this.setState(prevState => ({\r\n          activeStep: prevState.activeStep - 1,\r\n        }));\r\n      };\r\n    \r\n      handleStepChange = activeStep => {\r\n        this.setState({ activeStep });\r\n      };\r\n    \r\n      render() {\r\n        const { classes} = this.props;\r\n        const { activeStep } = this.state;\r\n        const maxSteps = tutorialSteps.length;\r\n    \r\n        return (\r\n          <div className={classes.root}>\r\n              <Grid container className={classes.helpGrid}>\r\n                <ClickAwayListener onClickAway={this.handleTooltipClose}>\r\n                  <div>\r\n                    <Tooltip\r\n                      PopperProps={{\r\n                        disablePortal: true,\r\n                      }}\r\n                      onClose={this.handleTooltipClose}\r\n                      open={this.state.openTooltops}\r\n                      disableFocusListener\r\n                      disableHoverListener\r\n                      disableTouchListener\r\n                      title={helpTooltip}\r\n                    >\r\n                      <Button onClick={this.handleTooltipOpen}>\r\n                      <i className=\"material-icons\">\r\n                        help_outline\r\n                      </i>\r\n                      </Button>\r\n                    </Tooltip>\r\n                  </div>\r\n                </ClickAwayListener>\r\n              </Grid>\r\n          \r\n            <Paper square elevation={0} className={classes.header}>\r\n              <Typography variant=\"h5\" gutterBottom>{tutorialSteps[activeStep].label}</Typography>\r\n              <Button className={classes.button} target=\"_blank\" href={tutorialSteps[activeStep].url} variant=\"contained\" color=\"primary\">사이트 보기</Button>\r\n            </Paper>\r\n            <AutoPlaySwipeableViews\r\n              axis={'x'}\r\n              index={activeStep}\r\n              onChangeIndex={this.handleStepChange}\r\n              enableMouseEvents\r\n            >\r\n              {tutorialSteps.map((step, index) => (\r\n                <div key={step.label}>\r\n                  {Math.abs(activeStep - index) <= 2 ? (\r\n                    <img className={classes.img} src={step.imgPath} alt={step.label} />\r\n                  ) : null}\r\n                  \r\n                  <ExpansionPanel>\r\n                  <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography variant=\"h6\" className={classes.heading}>포트폴리오 설명</Typography>\r\n                  </ExpansionPanelSummary>\r\n                  <ExpansionPanelDetails>\r\n                    <Typography>\r\n                    {step.description}\r\n                    </Typography>\r\n                  </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                </div>\r\n              ))}\r\n            </AutoPlaySwipeableViews>\r\n            <MobileStepper\r\n              steps={maxSteps}\r\n              position=\"static\"\r\n              activeStep={activeStep}\r\n              className={classes.mobileStepper}\r\n              nextButton={\r\n                <Button size=\"small\" onClick={this.handleNext} disabled={activeStep === maxSteps - 1}>\r\n                  Next\r\n                  {<KeyboardArrowRight />}\r\n                </Button>\r\n              }\r\n              backButton={\r\n                <Button size=\"small\" onClick={this.handleBack} disabled={activeStep === 0}>\r\n                  { <KeyboardArrowLeft />}\r\n                  Back\r\n                </Button>\r\n              }\r\n            />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default  withStyles(styles)(PortfolioWrapper);","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport PortfolioWrapper from '../containers/PortfolioWrapper/PortfolioWrapper';\r\n\r\n\r\nconst PortfolioPage = () => {\r\n    return (\r\n        <PageTemplate>\r\n            <PortfolioWrapper/>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default PortfolioPage;","import React from 'react';\r\n\r\nconst TimelineCards = ({id,title,dt,dd,icon}) => {\r\n    // map 돌리는건 containers에 있어야겠네.\r\n    return(\r\n            <li className=\"timeline-item\" id={id}>\r\n                <div className=\"card\">\r\n                    {!!icon?<img class=\"card-icon\" src={icon}/>:''}\r\n                    <h2 className=\"card-title\">{title}</h2>\r\n                    <dl className=\"card-definition\">\r\n                        <dt>\r\n                            {dt}\r\n                        </dt>\r\n                        <dd>\r\n                            {dd}\r\n                        </dd>\r\n                    </dl>\r\n                </div>\r\n            </li> \r\n    ) \r\n};\r\n\r\nexport default TimelineCards;","import { createAction, handleActions } from 'redux-actions';\r\nimport fbConfig from '../../config/fbConfig';\r\n\r\n// action type\r\n\r\nconst GET_TIMELINE = 'GET_TIMELINE';\r\nconst GET_TIMELINE_LOAD = 'GET_TIMELINE_LOAD';\r\n// action creators\r\n\r\nconst getTimeline = createAction(GET_TIMELINE);\r\nconst getTimelineLoad = createAction(GET_TIMELINE_LOAD);\r\n\r\nexport const getTimeList = () => {\r\n    return (dispatch, getState)=>{\r\n        const state = getState().timeLine;\r\n        const countList = state.countList;\r\n        const TimeListFirst = fbConfig.firestore().collection('Timelines');\r\n        //전체 문서의 수를 세기위함\r\n        TimeListFirst.orderBy('index').limit(countList).get().then((querySnapshot)=> {\r\n            const lastBoard = querySnapshot.docs[querySnapshot.docs.length-1];\r\n            const rows = []; \r\n            querySnapshot.forEach((doc) => { \r\n                const childData = doc.data(); \r\n                rows.push(childData);}\r\n            ); \r\n           dispatch(getTimeline(rows));\r\n           dispatch(getTimelineLoad(lastBoard));\r\n        });\r\n    };\r\n};\r\n\r\nexport const getTimeListLoad = () => {\r\n    return (dispatch, getState) => {\r\n        const state = getState().timeLine;\r\n        const lastBoard = state.lastBoard;\r\n        const countList = state.countList;\r\n        const exists = state.exists;\r\n        const rows = []; \r\n        let TimeListFirst = fbConfig.firestore().collection('Timelines').orderBy('index');\r\n        if(!!exists){\r\n            if(!!lastBoard){\r\n                TimeListFirst.startAfter(lastBoard).limit(countList).get().then((querySnapshot)=> {\r\n                    querySnapshot.forEach((doc) => { \r\n                        const childData = doc.data(); \r\n                        rows.push(childData);\r\n                    });\r\n                    const lastBoard = querySnapshot.docs[querySnapshot.docs.length-1];\r\n                    dispatch(getTimeline(rows));\r\n                    dispatch(getTimelineLoad(lastBoard));\r\n                })\r\n            }else{\r\n                TimeListFirst.limit(countList).get().then((querySnapshot)=> {\r\n                    querySnapshot.forEach((doc) => { \r\n                        const childData = doc.data(); \r\n                        rows.push(childData);\r\n                    });\r\n                    const lastBoard = querySnapshot.docs[querySnapshot.docs.length-1];\r\n                    dispatch(getTimeline(rows));\r\n                    dispatch(getTimelineLoad(lastBoard));\r\n                })\r\n            }\r\n        }\r\n\r\n     };\r\n };\r\n\r\n\r\n// initial state\r\nconst initialState = {\r\n    timelines: []\r\n    // page state도 만들어줘야겠다. orderBy().limit() <- 갯수정하기 가능. 처음에는 앞쪽꺼부터\r\n    ,\r\n    lastBoard:'',\r\n    // 마지막 인덱스\r\n    exists:true,\r\n    countList:3,\r\n    //한페이지에 출력될 게시물 수\r\n};\r\n\r\n// reducer\r\nexport default handleActions({\r\n    [GET_TIMELINE]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            timelines: [...state.timelines, ...action.payload],\r\n        }\r\n    },\r\n\r\n    [GET_TIMELINE_LOAD]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            lastBoard:action.payload,\r\n            exists: action.payload?(action.payload.exists?action.payload.exists:''):''\r\n            // payload가 있니? 그럼 거기에 exists가 있니? 그럼 저장\r\n        }\r\n    }\r\n}, initialState);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TimelineCards from '../../components/TimelineCards/TimelineCards';\r\nimport { getTimeListLoad } from '../../store/modules/timeLine';\r\nimport { bindActionCreators } from 'redux';\r\nimport { withStyles, Grid, Tooltip, Zoom, ClickAwayListener, Button } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { compose } from 'recompose'\r\nimport './TimelineWrpper.scss';\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        // padding: theme.spacing.unit * 2,\r\n    },\r\n    absoluteProgress:{\r\n        position:'absolute',\r\n        right:50,\r\n        bottom:-50,\r\n    },\r\n    progress: {\r\n      margin: theme.spacing.unit * 2,\r\n    },\r\n    helpGrid:{\r\n      margin: '10px 0'\r\n    }\r\n  });\r\n  \r\nconst helpTooltip = `\r\n    Timeline 페이지는 저의 이력 및 공부 해온것들에 대한 타임라인 입니다.\r\n    firebase의 데이터베이스인 firestore에서 값을 가져와서 뿌려줍니다.\r\n    현재 스크롤을 계산하여 하단에 닿으면 새로 값을 가져옵니다.\r\n    `\r\nclass TimelineWrapper extends Component {\r\n    state={\r\n        isLoading:false,\r\n        openTooltops:false\r\n    }\r\n    componentDidMount() {\r\n        this.props.getTimeListLoad();\r\n        if(!!this.props.exists)window.addEventListener('scroll',this._infiniteScroll,true);\r\n        // 이거 텀을 줘야될것같다.\r\n    }\r\n    _infiniteScroll = () => {\r\n        let scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\r\n        let scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\r\n        let clientHeight = document.documentElement.clientHeight;\r\n        this.setState({\r\n            isLoading:false\r\n        });\r\n        if(scrollTop + clientHeight === scrollHeight){\r\n            this.setState({\r\n                isLoading:true\r\n            });\r\n            this.props.getTimeListLoad();\r\n        }\r\n    }\r\n    \r\n    handleTooltipClose = () => {\r\n      this.setState({ openTooltops: false });\r\n    };\r\n\r\n    handleTooltipOpen = () => {\r\n      this.setState({ openTooltops: true });\r\n    };\r\n\r\n\r\n    render() {\r\n        const{ timelines, classes} = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n              <Grid container className={classes.helpGrid}>\r\n                <ClickAwayListener onClickAway={this.handleTooltipClose}>\r\n                  <div>\r\n                    <Tooltip\r\n                      PopperProps={{\r\n                        disablePortal: true,\r\n                      }}\r\n                      onClose={this.handleTooltipClose}\r\n                      open={this.state.openTooltops}\r\n                      disableFocusListener\r\n                      disableHoverListener\r\n                      disableTouchListener\r\n                      title={helpTooltip}\r\n                    >\r\n                      <Button onClick={this.handleTooltipOpen}>\r\n                      <i className=\"material-icons\">\r\n                        help_outline\r\n                      </i>\r\n                      </Button>\r\n                    </Tooltip>\r\n                  </div>\r\n                </ClickAwayListener>\r\n              </Grid>\r\n            <div className=\"cover\">\r\n                <h1 className=\"cover-title\">\r\n                    <span className=\"text-center\">Minhan`s TimeLine</span>\r\n                </h1>\r\n            </div>\r\n                <div className=\"wrapper\">\r\n                    <ul className=\"timeline\">\r\n                    {\r\n                        timelines.map((card,i) => (\r\n                            <TimelineCards key={i} {...card}/>\r\n                        ))\r\n                    }\r\n                </ul>\r\n                {this.state.isLoading&&this.props.exists?\r\n                    (\r\n                        <div className={classes.absoluteProgress}>\r\n                            <CircularProgress className={classes.progress} />\r\n                        </div>)\r\n                    :\r\n                    ''}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n       timelines:state.timeLine.timelines,\r\n       exists:state.timeLine.exists\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch)=>({\r\n    getTimeListLoad : bindActionCreators(getTimeListLoad,dispatch)\r\n})\r\n\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n    )(TimelineWrapper);","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport TimeLineWrapper from '../containers/TimelineWrapper/TimelineWrapper';\r\n\r\nconst TimelinePage = () => {\r\n    return (\r\n        <PageTemplate>\r\n            <TimeLineWrapper/>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default TimelinePage;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {  Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Card, Typography, CardMedia, CardContent, Button } from '@material-ui/core';\r\nimport userDefaultImage from './userDefaultImage.png';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        maxWidth: 500,\r\n        margin:'10px auto'\r\n      },\r\n      media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n      },\r\n      button: {\r\n        margin: theme.spacing.unit,\r\n        padding : '8px'\r\n      },\r\n      delete:{\r\n        marginRight: '5px'\r\n      }\r\n})\r\n\r\nconst User = (props) => {\r\n    const { user, classes,handleClickOpen,handleClose,handleCloseDelete,open } = props;\r\n    if(!user) return <Redirect to='/'/>\r\n    return (\r\n    <div>\r\n        <Card className={classes.card}>\r\n          {user.photoURL ? \r\n          <CardMedia \r\n          className={classes.media} \r\n          alt=\"profile picture\" \r\n          image={user.photoURL} />\r\n           : \r\n           <CardMedia \r\n           className={classes.media} \r\n           alt=\"profile picture\" \r\n           image={userDefaultImage} />}\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              반갑습니다 {user.displayName}님!\r\n            </Typography>\r\n            <Typography gutterBottom component=\"p\">\r\n              email : {user.email}\r\n            </Typography>\r\n          </CardContent>\r\n\r\n          <Button variant=\"contained\" color=\"secondary\" className={classes.button} onClick={()=>handleClickOpen()}>\r\n            <DeleteIcon className={classes.delete} />\r\n            계정 삭제\r\n          </Button>\r\n        </Card>\r\n\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"계정을 삭제하시겠습니까?\"}\r\n            </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              저의 사이트를 이용해주셔서 감사했습니다. :)\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n              취소\r\n            </Button>\r\n            <Button onClick={handleCloseDelete} color=\"primary\" autoFocus>\r\n              삭제\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n    </div>);\r\n};\r\n\r\nexport default withStyles(styles)(User);","import React, { Component } from 'react';\r\nimport User from '../../components/User/User';\r\nimport { connect } from 'react-redux';\r\nimport { fireAuth } from '../../config/fbConfig';\r\nimport { Grid, ClickAwayListener, Tooltip, Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst helpTooltip = `\r\n  User페이지는 프로필사진과 이름, email을 가지고오는 페이지입니다.\r\n  프로필사진이 없다면 기본사진이 들어가게됩니다.\r\n  계정 삭제가 가능합니다.\r\n`\r\nconst styles = theme => ({\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        maxWidth: 500,\r\n        margin:'10px auto'\r\n    },\r\n    button:{\r\n        width: '130px',\r\n        padding: '8px'\r\n    },\r\n    helpGrid:{\r\n        margin: '10px 0'\r\n    },\r\n});\r\nclass UserWrapper extends Component {\r\n    state = {\r\n        open: false,\r\n        openTooltops:false\r\n      };\r\n    \r\n    \r\n      handleTooltipClose = () => {\r\n        this.setState({ openTooltops: false });\r\n      };\r\n  \r\n      handleTooltipOpen = () => {\r\n        this.setState({ openTooltops: true });\r\n      };\r\n      handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n      };\r\n    \r\n      handleClose = () => {\r\n        this.setState({ open: false });\r\n      };\r\n    \r\n    \r\n      handleCloseDelete = () => {\r\n        this.setState({ open: false });\r\n        this.userDelete();\r\n      };\r\n    \r\n    userDelete = () => {\r\n        fireAuth.currentUser.delete().then(function(e){\r\n        }).catch((e)=> {\r\n            console.log('error',e)\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const {user, classes} = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Grid container className={classes.helpGrid}>\r\n                    <ClickAwayListener onClickAway={this.handleTooltipClose}>\r\n                    <div>\r\n                        <Tooltip\r\n                        PopperProps={{\r\n                            disablePortal: true,\r\n                        }}\r\n                        onClose={this.handleTooltipClose}\r\n                        open={this.state.openTooltops}\r\n                        disableFocusListener\r\n                        disableHoverListener\r\n                        disableTouchListener\r\n                        title={helpTooltip}\r\n                        >\r\n                        <Button onClick={this.handleTooltipOpen}>\r\n                        <i className=\"material-icons\">\r\n                            help_outline\r\n                        </i>\r\n                        </Button>\r\n                        </Tooltip>\r\n                    </div>\r\n                    </ClickAwayListener>\r\n                </Grid>\r\n                <User\r\n                    user={user}\r\n                    open={this.state.open}\r\n                    handleClose={this.handleClose}\r\n                    handleClickOpen={this.handleClickOpen}\r\n                    handleCloseDelete={this.handleCloseDelete}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        user : state.auth.user\r\n    }\r\n}\r\nexport default withStyles(styles)(connect(mapStateToProps)(UserWrapper));","import React, { Component } from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport UserWrapper from '../containers/UserWrapper/UserWrapper';\r\n\r\nclass UserPage extends Component {\r\n    render() {\r\n        return (\r\n            <PageTemplate>\r\n                <UserWrapper/>\r\n            </PageTemplate>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserPage;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { AboutPage, UserPage, SignInPage,  ContactPage, CreactContactPage, ContactDetailsPage, NotFoundPage, PortfolioPage, TimelinePage } from '../pages'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n\r\n            <Switch>\r\n                <Route exact path=\"/\" component={AboutPage} />\r\n                <Route exact path=\"/contact\" component={ContactPage} />\r\n                <Route path=\"/contact/:id\" component={ContactDetailsPage} />\r\n                <Route path=\"/modify/:id\" component={CreactContactPage} />\r\n                <Route path=\"/create\" component={CreactContactPage} />\r\n                <Route path=\"/portfolio\" component={PortfolioPage} />\r\n                <Route path=\"/timeline\" component={TimelinePage} />\r\n                <Route path=\"/signin\" component={SignInPage} />\r\n                <Route path=\"/user\" component={UserPage} />\r\n                <Route component={NotFoundPage} />    \r\n            </Switch>   \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { creatAction, handleActions } from 'redux-actions';\r\n\r\n// action type\r\n\r\n// action creators\r\n\r\n// initial state\r\nconst initialState ={};\r\n\r\n// reducer\r\nexport default handleActions({\r\n\r\n}, initialState);","import { default as contact} from './modules/contact';\r\nimport { default as portfolio} from './modules/portfolio';\r\nimport { default as timeLine} from './modules/timeLine';\r\nimport { default as auth} from './modules/auth';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\n   \r\nconst reducers = combineReducers({\r\n    contact,\r\n    portfolio,\r\n    timeLine,\r\n    auth\r\n});\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunk));\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nclass Root extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <App/>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from './Root';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { red, amber,lime,teal } from '@material-ui/core/colors';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: teal,\r\n        secondary:{\r\n            main:teal[600],\r\n            light:teal[400],\r\n            dark:teal[700]\r\n        },\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n          '-apple-system',\r\n          'BlinkMacSystemFont',\r\n          '\"Segoe UI\"',\r\n          'Roboto',\r\n          '\"Helvetica Neue\"',\r\n          'Arial',\r\n          'sans-serif',\r\n          '\"Apple Color Emoji\"',\r\n          '\"Segoe UI Emoji\"',\r\n          '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        fontWeightMedium: 1000,\r\n    },\r\n});\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n        <Root />\r\n    </MuiThemeProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}