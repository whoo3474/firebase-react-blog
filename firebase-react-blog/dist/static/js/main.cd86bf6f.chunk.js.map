{"version":3,"sources":["components/common/Footer/Footer.js","config/fbConfig.js","store/modules/auth.js","components/common/Navbar/SignedInLink.js","components/common/Navbar/SignedOutLink.js","components/common/Header/Header.js","components/common/PageTemplate/PageTemplate.js","pages/AboutPage.js","containers/SignInWrapper/SignInWrapper.js","pages/SignInPage.js","components/Contact/Notifications.js","components/Contact/ContactSummary.js","components/Contact/ContactList.js","store/modules/contact.js","containers/ContactWrapper/ContactWrapper.js","pages/ContactPage.js","components/Contact/ContactDetails.js","containers/ContactDetailsWrapper/ContactDetailsWrapper.js","pages/ContactDetailsPage.js","containers/CreateContact/CreateContactWrapper.js","pages/CreactContactPage.js","pages/NotFoundPage.js","pages/PortfolioPage.js","components/TimelineCards/TimelineCards.js","store/modules/timeLine.js","containers/TimelineWrapper/TimelineWrapper.js","pages/TimelinePage.js","containers/SignUpWrapper/SignUpWrapper.js","pages/SignUpPage.js","components/App.js","store/modules/portfolio.js","store/index.js","Root.js","serviceWorker.js","index.js"],"names":["Footer","react_default","a","createElement","className","href","fbConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","auth","storage","authSignInSuccess","createAction","authSignInError","authSignOutSuccess","authSignCheckOk","authSignCheckNo","createAuthEmailSuccess","createAuthEmailError","getUserInfoTk","user","dispatch","getState","console","log","createAuthEmailTk","newUser","createUserWithEmailAndPassword","email","password","then","response","collection","doc","uid","set","name","catch","error","authSignInTk","signInWithEmailAndPassword","err","authSignOutTk","signOut","authCheckTk","onAuthStateChanged","handleActions","_handleActions","Object","defineProperty","state","action","objectSpread","authError","isSignedIn","payload","message","redirect","userId","SignedInLink","props","id","NavLink","to","activeClassName","onClick","handleClick","SignedOutLink","Header","componentDidMount","_this","links","this","Navbar_SignedInLink","Navbar_SignedOutLink","data-target","Link","Component","connect","bindActionCreators","PageTemplate","_ref","children","common_Header_Header","common_Footer_Footer","AboutPage","common_PageTemplate_PageTemplate","SignInWrapper","firestName","lastName","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","FacebookAuthProvider","GithubAuthProvider","callbacks","signInSuccess","handleChange","e","setState","target","value","handleSubmit","preventDefault","currentUser","_this$props","Redirect","onSubmit","htmlFor","type","onChange","SignInPage","containers_SignInWrapper_SignInWrapper","Notifications","notifications","map","item","key","content","moment","time","toDate","fromNow","ContactSummary","contact","title","authorName","createdAt","calendar","ContactList","contactList","Contact_ContactSummary","getContact","getContactList","createContact","createContactError","getNotifications","getContactListTk","orderBy","get","querySnapshot","rows","forEach","childData","data","push","getNotificationsTk","limit","getContactTk","createContactTk","contactDoc","firebaseUser","fireStorage","file","displayName","authorId","Date","ref","put","contact_handleActions","concat","toConsumableArray","ContactWrapper","Contact_Notifications","Contact_ContactList","ContactPage","containers_ContactWrapper_ContactWrapper","ContactDetails","ContactDetailsWrapper","Contact_ContactDetails","ContactDetailsPage","match","params","containers_ContactDetailsWrapper_ContactDetailsWrapper","CreateContactWrapper","handleFileChange","files","CreactContactPage","CreateContact_CreateContactWrapper","NotFoundPage","PortfolioPage","TimelineCards","dt","dd","class","getTimeline","getTimelineNext","getTimelineTotal","getTimelineLoad","getTimeList","countList","timeLine","TimeListFirst","total","size","empty","lastVisible","docs","length","getTimeListLoad","next","nextPage","totalCount","startAfter","timeLine_handleActions","timelines","loading","end","currentPageIndex","scrolling","TimelineWrapper","contacts","handleScroll","lastLi","document","querySelector","lastLiOffset","offsetTop","clientHeight","window","pageYOffset","innerHeight","loadMore","paging","_this2","scrollListener","addEventListener","card","i","components_TimelineCards_TimelineCards","assign","TimelinePage","containers_TimelineWrapper_TimelineWrapper","SignUpWrapper","_this$state","SignUpPage","containers_SignUpWrapper_SignUpWrapper","App","Switch","Route","exact","path","component","reducers","combineReducers","portfolio","store","createStore","applyMiddleware","thunk","Root","es","BrowserRouter","components_App","Boolean","location","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd86bf6f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n    return (\r\n\r\n        <footer className=\"page-footer  grey darken-3\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col l6 s12\">\r\n                <h5 className=\"white-text\">Footer Content</h5>\r\n                <p className=\"grey-text text-lighten-2\">You can use rows and columns here to organize your footer content.</p>\r\n              </div>\r\n              <div className=\"col l4 offset-l2 s12\">\r\n                <h5 className=\"white-text\">Links</h5>\r\n                <ul>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 1</a></li>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 2</a></li>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 3</a></li>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 4</a></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer-copyright\">\r\n            <div className=\"container\">\r\n            © 2019 Copyright WooJeongMin. All rights reserved.\r\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\n  // Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyBV6vnnfRhB89PsOMSiQxWwHfaa6HeGNnM\",\r\n    authDomain: \"fir-react-blog.firebaseapp.com\",\r\n    databaseURL: \"https://fir-react-blog.firebaseio.com\",\r\n    projectId: \"fir-react-blog\",\r\n    storageBucket: \"fir-react-blog.appspot.com\",\r\n    messagingSenderId: \"811250927565\"\r\n  };\r\n  \r\n  const fbConfig =firebase.initializeApp(config);\r\n  \r\n  export const fireStore = firebase.firestore().settings({ timestampsInSnapshots: true});\r\n    // fbConfig.storage();\r\n\r\n  export const fireAuth = firebase.auth();\r\n  export const fireStorege = firebase.storage();\r\n  export default fbConfig;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport fbConfig from '../../config/fbConfig';\r\n\r\n// action type\r\nconst AUTH_SIGN_IN_SUCCESS = 'AUTH_SIGN_IN_SUCCESS';\r\nconst AUTH_SIGN_IN_ERROR = 'AUTH_SIGN_IN_ERROR';\r\nconst AUTH_SIGN_OUT_SUCCESS = 'AUTH_SIGN_OUT_SUCCESS';\r\nconst AUTH_SIGN_CHECK_OK = 'AUTH_SIGN_CHECK_OK';\r\nconst AUTH_SIGN_CHECK_NO = 'AUTH_SIGN_CHECK_NO';\r\nconst CREATE_AUTH_EMAIL_SUCCESS = 'CREATE_AUTH_EMAIL_SUCCESS';\r\nconst CREATE_AUTH_EMAIL_ERROR = 'CREATE_AUTH_EMAIL_ERROR';\r\nconst GET_USER_INFO = 'GET_USER_INFO';\r\n\r\n// action creators\r\nconst authSignInSuccess = createAction(AUTH_SIGN_IN_SUCCESS);\r\nconst authSignInError = createAction(AUTH_SIGN_IN_ERROR);\r\nconst authSignOutSuccess = createAction(AUTH_SIGN_OUT_SUCCESS);\r\nconst authSignCheckOk = createAction(AUTH_SIGN_CHECK_OK);\r\nconst authSignCheckNo = createAction(AUTH_SIGN_CHECK_NO);\r\nconst createAuthEmailSuccess = createAction(CREATE_AUTH_EMAIL_SUCCESS);\r\nconst createAuthEmailError = createAction(CREATE_AUTH_EMAIL_ERROR);\r\nconst getUserInfo = createAction(GET_USER_INFO);\r\n\r\nexport const getUserInfoTk = (user) => {\r\n    return (dispatch, getState) => {\r\n        console.log('info',fbConfig.auth());\r\n    }\r\n}\r\n\r\n//email,password 아이디 비밀번호로 생성\r\nexport const createAuthEmailTk = (newUser) => {\r\n    return (dispatch, getState) => {\r\n        const firestore = fbConfig.firestore();\r\n        fbConfig.auth().createUserWithEmailAndPassword(newUser.email,newUser.password).then((response)=>{\r\n            // firebase auth 에서 이메일로 유저를 만들때 사용, 프로미스 반환\r\n            return firestore.collection('users').doc(response.user.uid).set({\r\n                name : newUser.name\r\n            })\r\n        }).then(()=>{\r\n            dispatch(createAuthEmailSuccess());\r\n        }).catch((error) => {\r\n            dispatch(createAuthEmailError(error));\r\n        });\r\n    }\r\n}\r\n//email,password 인증\r\nexport const authSignInTk = (user) => {\r\n    const {email,password} = user;\r\n    return (dispatch, getState) =>{\r\n        fbConfig.auth().signInWithEmailAndPassword(email, password).then((a)=>{\r\n            // firebase auth 에서 이메일로 유저를 인증할때 사용, 프로미스 반환\r\n            dispatch(authSignInSuccess(a.user));\r\n        }).catch((err)=>{\r\n            dispatch(authSignInError(err));\r\n        });\r\n    }\r\n}\r\n//email,password 로그아웃\r\nexport const authSignOutTk = () => {\r\n    return (dispatch, getState) =>{\r\n        fbConfig.auth().signOut().then((a)=>{\r\n            dispatch(authSignOutSuccess())}\r\n        );\r\n    }\r\n}\r\n\r\nexport const authCheckTk = () => {\r\n    return (dispatch,getState) => {\r\n        fbConfig.auth().onAuthStateChanged(user => {\r\n            // firebase auth 에서 인증상태를 감시하기 위하여 사용, 인증 상태가 변경될때마다 작용, 로그인 또는 로그아웃시\r\n            if(user){\r\n                dispatch(authSignCheckOk(user));\r\n            }else{\r\n                dispatch(authSignCheckNo());\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    userId:'',\r\n    redirect:false,\r\n    authError:'',\r\n    message:''\r\n}\r\n\r\nexport default handleActions({\r\n    [AUTH_SIGN_IN_SUCCESS]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            authError: '',\r\n            isSignedIn:true\r\n        }\r\n    },\r\n    [AUTH_SIGN_IN_ERROR]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            isSignedIn:false,\r\n            authError: action.payload.message\r\n        }\r\n    },\r\n\r\n    [AUTH_SIGN_OUT_SUCCESS]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            isSignedIn:false,\r\n            redirect:true\r\n        }\r\n    },\r\n\r\n    [AUTH_SIGN_CHECK_OK]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            isSignedIn:true,\r\n            user:action.payload\r\n        }\r\n    },\r\n    [AUTH_SIGN_CHECK_NO]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            isSignedIn:false,\r\n            user:''\r\n        }\r\n    },\r\n    [CREATE_AUTH_EMAIL_SUCCESS]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            authError:''\r\n        }\r\n    },\r\n    [CREATE_AUTH_EMAIL_ERROR]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            authError:action.payload.message\r\n        }\r\n    }\r\n},initialState);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst SignedInLink = (props) => {\r\n    return (\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n            <li>\r\n                <NavLink to='/' activeClassName='active'>About</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/timeline' activeClassName='active'>TimeLine</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/contact' activeClassName='active'>Contact</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/user' className='btn btn-floating pink lighten-1'>user</NavLink>\r\n            </li>\r\n            <li>\r\n                <a onClick={()=>props.handleClick()}>LogOut</a>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default SignedInLink;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst SignedOutLink = (props) => {\r\n    return (\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n            <li>\r\n                <NavLink to='/' activeClassName='active'>About</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/timeline' activeClassName='active'>TimeLine</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/contact' activeClassName='active'>Contact</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/signup' className='active'>SignUp</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/signin' activeClassName='active'>LogIn</NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default SignedOutLink;","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink,Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\nimport {authSignOutTk, authCheckTk ,getUserInfoTk} from '../../../store/modules/auth';\r\nimport SignedInLink from '../Navbar/SignedInLink';\r\nimport SignedOutLink from '../Navbar/SignedOutLink';\r\nimport fbConfig from '../../../config/fbConfig';\r\n// import M from \"materialize-css\";\r\n\r\nclass Header extends Component{\r\n    // componentDidMount() {\r\n    //     var elem = document.querySelector(\".sidenav\");\r\n    //     var instances = M.Sidenav.init(elem);\r\n    // }\r\n\r\n    // componentDidMount = () => {\r\n    //     fbConfig.auth().onAuthStateChanged(user => {\r\n    //           this.props.isSignedIn=!!user\r\n    //     })\r\n    // }\r\n    componentDidMount = () => {\r\n        \r\n        this.props.authCheckTk();\r\n        this.props.getUserInfoTk();\r\n    }\r\n    handleClick = () => {\r\n        this.props.authSignOutTk();\r\n    }\r\n\r\n    // signIn signOut 에 따라 다르게 보여줘야된다.\r\n    render(){\r\n        const links = this.props.isSignedIn ? <SignedInLink handleClick={this.handleClick}/> : <SignedOutLink/> ;\r\n        return (\r\n\r\n                <nav className=\"nav-extended grey darken-3\">\r\n                    <div className=\"nav-wrapper\">\r\n                    <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>          \r\n                        <Link to=\"/\" className=\"brand-logo\">Minhan Blog</Link>\r\n                        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                            { links }\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        isSignedIn : state.auth.isSignedIn,\r\n        redirect: state.auth.redirect\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        authSignOutTk : bindActionCreators(authSignOutTk,dispatch),\r\n        authCheckTk : bindActionCreators(authCheckTk,dispatch),\r\n        getUserInfoTk : bindActionCreators(getUserInfoTk,dispatch)\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Header);","import React from 'react';\r\nimport Footer from '../Footer/Footer';\r\nimport Header from '../Header/Header';\r\nimport './PageTemplate.scss';\r\n// nav route\r\n\r\nconst PageTemplate = ({children}) => {\r\n    return (\r\n        <div className=\"page-template\">\r\n            <Header/>\r\n            <main className=\"main-content\">\r\n                {children}\r\n            <Footer/>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageTemplate;","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\n\r\nconst AboutPage = () => {\r\n    return (\r\n        <PageTemplate>\r\n            about\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default AboutPage;","import React, { Component } from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { authSignInTk } from '../../store/modules/auth';\r\nimport { Redirect } from 'react-router-dom';\r\nimport fbConfig from '../../config/fbConfig';\r\n\r\nclass SignInWrapper extends Component {\r\n\r\n    state ={\r\n        email: '',\r\n        password:'',\r\n        firestName:'',\r\n        lastName:'',\r\n        isSignedIn: false\r\n    }\r\n    \r\n    uiConfig ={\r\n        signInFlow:\"popup\",\r\n        signInOptions: [\r\n            firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n            firebase.auth.GithubAuthProvider.PROVIDER_ID\r\n        ],\r\n        callbacks: {\r\n            signInSuccess: ()=> false\r\n        }\r\n    }\r\n    // 이건 여기에 있는게 맞는거같음\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.authSignInTk(this.state);\r\n        console.log('currentUser',fbConfig.auth().currentUser);\r\n    }\r\n    render() {\r\n        const { authError,user } = this.props;\r\n        if(!!user) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h5>로그인</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn\">로그인</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : ''}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"division\"></div>\r\n                {/* {\r\n                    this.props.isSignedIn?\r\n                    (<div>\r\n                        <div>로그인이 되었습니다.</div>\r\n                        <button onClick={()=>fbConfig.auth().signOut()}>로그아웃</button>\r\n                        <h1>welcome {fbConfig.auth().currentUser.displayName}</h1>\r\n                        <img alt=\"profile picture\" src={fbConfig.auth().currentUser.photoURL}/>\r\n                    </div>\r\n                    ):\r\n                    (<StyledFirebaseAuth\r\n                    uiConfig={this.uiConfig}\r\n                    firebaseAuth={fbConfig.auth()}/>)\r\n                } */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        isSignedIn : state.auth.isSignedIn,\r\n        authError : state.auth.authError,\r\n        user : state.auth.user\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        authSignInTk : bindActionCreators(authSignInTk,dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignInWrapper);","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport SignInWrapper from '../containers/SignInWrapper/SignInWrapper';\r\n\r\nconst SignInPage = () => {\r\n    return (\r\n        <PageTemplate>\r\n            <SignInWrapper/>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default SignInPage;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\n// contactWrapper에서 보여줌\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"secondary\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">공지사항</span>\r\n                    <ul className=\"notifications\">\r\n                        <li>\r\n                            { notifications && notifications.map( item => {\r\n                                return (\r\n                                    <li key={item.id}>\r\n                                        <span className=\"pink-text\">{item.user}</span>\r\n                                        <span>{item.content}</span>\r\n                                        <div className=\"grey-text note-date\">\r\n                                            {moment(item.time.toDate()).fromNow()}\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ContactSummary = ({contact,key}) => {\r\n    return (\r\n        <div id={key} className=\"card z-depth-0 contact-summary\">\r\n            <div className=\"card-content gery-text text-darken-3\">\r\n                <span className=\"card-title\">{contact.title}</span>\r\n            <p>{contact.content}</p>\r\n            <p className=\"grey-text\">Posted by {contact.authorName||'이름없음'}</p>\r\n            <p className=\"grey-text\">{moment(contact.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactSummary;","import React from 'react';\r\nimport ContactSummary from './ContactSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// contactWrapper에서 보여줌\r\nconst ContactList = ({contactList}) => {\r\n\r\n    return (\r\n        <div className=\"contact-list section\">\r\n            { contactList && contactList.map(contact => {\r\n                return (\r\n                    <Link to={'/contact/'+contact.id }>\r\n                      <ContactSummary contact={contact} key={contact.id}/>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactList;","import { createAction, handleActions } from 'redux-actions';\r\nimport fbConfig from '../../config/fbConfig';\r\n\r\n\r\n// action type\r\nconst GET_CONTACT = 'GET_CONTACT';\r\nconst GET_CONTACT_LIST = 'GET_CONTACT_LIST';\r\nconst CREATE_CONTACT = 'CREATE_CONTACT';\r\nconst CREATE_CONTACT_ERROR = 'CREATE_CONTACT_ERROR';\r\nconst GET_NOTIFICATIONS = 'GET_NOTIFICATIONS';\r\n\r\n// action creators\r\nconst getContact = createAction(GET_CONTACT);\r\nconst getContactList = createAction(GET_CONTACT_LIST);\r\nconst createContact = createAction(CREATE_CONTACT);\r\nconst createContactError = createAction(CREATE_CONTACT_ERROR);\r\nconst getNotifications = createAction(GET_NOTIFICATIONS);\r\n\r\nexport const getContactListTk = () => {\r\n    return (dispatch, getState)=>{\r\n        fbConfig.firestore().collection('contacts').orderBy('createdAt','desc').get()\r\n        .then((querySnapshot)=> {\r\n            let rows = []; \r\n            querySnapshot.forEach((doc) => { \r\n                let childData = doc.data(); \r\n                rows.push(childData);\r\n            });\r\n           dispatch(getContactList(rows));\r\n        });\r\n    };\r\n};\r\nexport const getNotificationsTk = () => {\r\n    return (dispatch, getState)=>{\r\n        fbConfig.firestore().collection('notifications').orderBy('time').limit(3).get()\r\n        .then((querySnapshot)=> {\r\n            let rows = []; \r\n            querySnapshot.forEach((doc) => { \r\n                let childData = doc.data(); \r\n                rows.push(childData);\r\n            });\r\n           dispatch(getNotifications(rows));\r\n        });\r\n    };\r\n};\r\n\r\nexport const getContactTk = (id) => {\r\n    return (dispatch, getState)=>{\r\n        fbConfig.firestore().collection('contacts').doc(id).get()\r\n        .then((querySnapshot)=>\r\n            dispatch(getContact(querySnapshot.data()))\r\n        );\r\n    };\r\n};\r\n\r\n\r\nexport const createContactTk = (contact) => {\r\n    return (dispatch, getState) => {\r\n        const contactDoc = fbConfig.firestore().collection('contacts').doc();\r\n        const firebaseUser = fbConfig.auth().currentUser;\r\n        const fireStorage =fbConfig.storage();\r\n        console.log('firebaseUser',firebaseUser);\r\n        console.log('contact.file',contact.file);\r\n        contactDoc.set({\r\n            ...contact,\r\n            id:contactDoc.id,\r\n            file: contact.file.name||'',\r\n            authorName: firebaseUser.displayName||'이름없음',\r\n            authorId:firebaseUser.email||'이메일없음',\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            fireStorage.ref('blog_img/'+contact.file.name);\r\n            fireStorage.put(contact.file);\r\n            dispatch(createContact(contact));\r\n            // 스토리지에 저장\r\n        }).catch((err) => {\r\n            dispatch(createContactError(err));\r\n        })\r\n    } \r\n};\r\n\r\n// initial state\r\nconst initialState = {\r\n    contactList:[],\r\n    contact:{},\r\n    notifications:[]\r\n}\r\n\r\n// reducer\r\nexport default handleActions({\r\n    [GET_CONTACT_LIST] : (state,action) => {\r\n        return {\r\n            ...state,\r\n            contactList: action.payload\r\n        }\r\n    },\r\n    [GET_CONTACT] : (state,action) => {\r\n        return {\r\n            ...state,\r\n            contact: action.payload\r\n        }\r\n    },\r\n    [CREATE_CONTACT] : (state,action) => {\r\n        return {\r\n            ...state,\r\n            contactList:[...state.contactList,action.payload]\r\n        }\r\n    },\r\n    [CREATE_CONTACT_ERROR] : (state,action) => {\r\n        return {\r\n            ...state\r\n        }\r\n    },\r\n    [GET_NOTIFICATIONS] : (state,action) => {\r\n        return {\r\n            ...state,\r\n            notifications: action.payload\r\n        }\r\n    }\r\n}, initialState);","import React, { Component } from 'react';\r\nimport Notifications from '../../components/Contact/Notifications';\r\nimport ContactList from '../../components/Contact/ContactList';\r\nimport { connect } from 'react-redux';\r\nimport { getContactListTk, getNotificationsTk } from '../../store/modules/contact';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Redirect,Link } from 'react-router-dom';\r\n\r\nclass ContactWrapper extends Component {\r\n    componentDidMount() {\r\n        this.props.getContactListTk();\r\n        this.props.getNotificationsTk();\r\n    }\r\n    render() {\r\n        const { contactList, notifications} = this.props;\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"col\">\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                    <div className=\"c\">\r\n                        <Link className='waves-effect waves-light btn' to='/create'>게시글 생성</Link>\r\n                    </div>\r\n                    <div className=\"col s12 m6\">\r\n                        <ContactList contactList={contactList}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        contactList : state.contact.contactList,\r\n        notifications: state.contact.notifications\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getContactListTk : bindActionCreators(getContactListTk,dispatch),\r\n    getNotificationsTk : bindActionCreators(getNotificationsTk,dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactWrapper);","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport ContactWrapper from '../containers/ContactWrapper/ContactWrapper';\r\n\r\nconst ContactPage = () => {\r\n    return (\r\n        <PageTemplate>\r\n            <ContactWrapper/>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default ContactPage;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ContactDetails = (props) => {\r\n    const {contact} = props;\r\n    console.log(contact);\r\n\r\n        return (\r\n                    <div className=\"card z-depth-0\">\r\n                        <div className=\"card-content\">\r\n                            <span className=\"card-title\">{contact.title}</span>\r\n                            <p> \r\n                                {contact.content}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"card-action grey-lighten-4 gery-text\">\r\n                            <div>\r\n                                Posted by {contact.authorName||'이름없음'}\r\n                            </div>\r\n                            <div>\r\n                            {moment(contact.createdAt).calendar()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        );\r\n\r\n};\r\n\r\nexport default ContactDetails;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactDetails from '../../components/Contact/ContactDetails';\r\nimport { getContactTk } from '../../store/modules/contact';\r\nimport { bindActionCreators } from 'redux';\r\nclass ContactDetailsWrapper extends Component {\r\n    componentDidMount() {\r\n        const id = this.props.id;\r\n        this.props.getContactTk(id);\r\n    }\r\n    render() {\r\n        const {contact, getContactTk,id} = this.props;\r\n        if(!!contact){\r\n        return(\r\n            <div className=\"container section contact-details\">\r\n                <ContactDetails contact={contact}/>\r\n             </div>\r\n           );\r\n        }else {\r\n            return(\r\n                <div className=\"container center\">\r\n                  <p>Loading ContactDetails......</p>\r\n                </div>\r\n                // 이거 작동을 안하나?\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact : state.contact.contact\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getContactTk : bindActionCreators(getContactTk,dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactDetailsWrapper);","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport ContactDetailsWrapper from '../containers/ContactDetailsWrapper/ContactDetailsWrapper';\r\n\r\nconst ContactDetailsPage = (props) => {\r\n    const id = props.match.params.id;\r\n    return (\r\n        <PageTemplate>\r\n            <ContactDetailsWrapper id={id}/>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default ContactDetailsPage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createContactTk } from '../../store/modules/contact';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nclass CreateContactWrapper extends Component {\r\n    state ={\r\n        title: '',\r\n        content:'',\r\n        file:'',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file : e.target.files[0]\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createContactTk(this.state);\r\n    }\r\n    render() {\r\n        const { user } = this.props;\r\n        if(!user) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h5>글쓰기</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}>\r\n                       \r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"divider\"/>\r\n                    <input type=\"file\" id=\"file\" onChange={this.handleFileChange}/>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn\">생성</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createContactTk : bindActionCreators(createContactTk,dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateContactWrapper);","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport CreateContactWrapper from '../containers/CreateContact/CreateContactWrapper';\r\n\r\nconst CreactContactPage = () => {\r\n    return (\r\n        <PageTemplate>\r\n            <CreateContactWrapper/>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default CreactContactPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <div>\r\n            NotFoundPage\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\n\r\nconst PortfolioPage = () => {\r\n    return (\r\n        <div>\r\n            PortfolioPage\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PortfolioPage;","import React from 'react';\r\nimport './TimelineCards.scss';\r\n\r\nconst TimelineCards = ({id,title,dt,dd}) => {\r\n    // map 돌리는건 containers에 있어야겠네.\r\n    return(\r\n            <li class=\"timeline-item\" id={id}>\r\n                <div class=\"card\">\r\n                    <h2 class=\"card-title\">{title}</h2>\r\n                    <dl class=\"card-definition\">\r\n                        <dt>\r\n                            {dt}\r\n                        </dt>\r\n                        <dd>\r\n                            {dd}\r\n                        </dd>\r\n                    </dl>\r\n                </div>\r\n            </li>\r\n    )\r\n};\r\n\r\nexport default TimelineCards;\r\n//img, title, dt, dd, timestamp","import { createAction, handleActions } from 'redux-actions';\r\nimport fbConfig from '../../config/fbConfig';\r\n\r\n// action type\r\n\r\nconst GET_TIMELINE = 'GET_TIMELINE';\r\nconst GET_TIMELINE_NEXT = 'GET_TIMELINE_NEXT';\r\nconst GET_TIMELINE_TOTAL = 'GET_TIMELINE_TOTAL';\r\nconst GET_TIMELINE_LOAD = 'GET_TIMELINE_LOAD';\r\n// action creators\r\n\r\nconst getTimeline = createAction(GET_TIMELINE);\r\nconst getTimelineNext = createAction(GET_TIMELINE_NEXT);\r\nconst getTimelineTotal = createAction(GET_TIMELINE_TOTAL);\r\nconst getTimelineLoad = createAction(GET_TIMELINE_LOAD);\r\n\r\nexport const getTimeList = () => {\r\n    return (dispatch, getState)=>{\r\n        const state = getState().timeLine;\r\n        const countList = state.countList;\r\n        const TimeListFirst = fbConfig.firestore().collection('Timelines');\r\n        //전체 문서의 수를 세기위함\r\n        TimeListFirst.get().then((total)=> {\r\n            dispatch(getTimelineTotal(total.size));\r\n        });\r\n        TimeListFirst.orderBy('title').limit(countList).get().then((querySnapshot)=> {\r\n            console.log(querySnapshot);\r\n            console.log(querySnapshot.empty);\r\n            const lastVisible = querySnapshot.docs[querySnapshot.docs.length-1];\r\n            dispatch(getTimelineNext(lastVisible));\r\n            const rows = []; \r\n            querySnapshot.forEach((doc) => { \r\n                const childData = doc.data(); \r\n                rows.push(childData);}\r\n            ); \r\n           dispatch(getTimeline(rows));\r\n        });\r\n    };\r\n};\r\n\r\nexport const getTimeListLoad = () => {\r\n    return (dispatch, getState) => {\r\n        const state = getState().timeLine;\r\n        const next = state.nextPage;\r\n        const total = state.totalCount;\r\n        const countList = state.countList;\r\n        const TimeListFirst = fbConfig.firestore().collection('Timelines');\r\n        TimeListFirst.orderBy('title').startAfter(next).limit(countList).get().then((querySnapshot)=> {\r\n            const lastVisible = querySnapshot.docs[querySnapshot.docs.length-1];\r\n            dispatch(getTimelineNext(lastVisible));\r\n            const rows = []; \r\n            querySnapshot.forEach((doc) => { \r\n                const childData = doc.data(); \r\n                rows.push(childData);}\r\n            ); \r\n            dispatch(getTimelineLoad(rows));\r\n         });\r\n     };\r\n };\r\n\r\n\r\n// initial state\r\nconst initialState = {\r\n    timelines: []\r\n    // page state도 만들어줘야겠다. orderBy().limit() <- 갯수정하기 가능. 처음에는 앞쪽꺼부터\r\n    ,\r\n    loading:false,\r\n    end:false,\r\n    countList:3,\r\n    //한페이지에 출력될 게시물 수\r\n    currentPageIndex:0,\r\n    //현재 페이지 번호\r\n    nextPage:'',\r\n    totalCount:0,\r\n    //총 게시물 수\r\n    scrolling:false\r\n};\r\n\r\n// reducer\r\nexport default handleActions({\r\n    [GET_TIMELINE]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            timelines: action.payload\r\n        }\r\n    },\r\n\r\n    [GET_TIMELINE_LOAD]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            timelines: [...state.timelines, ...action.payload]\r\n        }\r\n    },\r\n\r\n    [GET_TIMELINE_NEXT] : (state, action) => {\r\n        return {\r\n            ...state,\r\n            nextPage: action.payload\r\n        }\r\n    },\r\n\r\n    [GET_TIMELINE_TOTAL] : (state, action) => {\r\n        return {\r\n            ...state,\r\n            totalCount: action.payload\r\n        }\r\n    }\r\n}, initialState);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TimelineCards from '../../components/TimelineCards/TimelineCards';\r\nimport './TimelineWrapper.scss';\r\nimport { getTimeList, getTimeListLoad } from '../../store/modules/timeLine';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nclass TimelineWrapper extends Component {\r\n    state = {\r\n        contacts : [],\r\n        totalCount: null,\r\n        scrolling: false\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getTimeList();\r\n        //스크롤 만들어보자\r\n        this.scrollListener = window.addEventListener('scroll', (e) =>{\r\n            this.handleScroll(e)\r\n        })\r\n        const {totalCount} = this.props;\r\n        console.log(totalCount);\r\n    }\r\n    handleScroll= (e) => {\r\n        const { scrolling, totalCount, nextPage } = this.props;\r\n        if(scrolling) return;\r\n        const lastLi = document.querySelector('ul.timeline-list > li:last-child');\r\n        console.log(lastLi);\r\n        const lastLiOffset = lastLi.offsetTop + lastLi.clientHeight;\r\n        const pageOffset = window.pageYOffset + window.innerHeight;\r\n        let bottomOffset = 20;\r\n        if (pageOffset > lastLiOffset - bottomOffset) this.loadMore();\r\n    }\r\n\r\n    loadMore = () => {\r\n        if (this.paging.end) {\r\n            return;\r\n        };\r\n        console.log(\"hello load\")\r\n        this.props.getTimeListLoad();\r\n        // scrolling:true;\r\n        // 파이어베이스 호출 해서 rows에 넣어야된다.\r\n    }\r\n \r\n    render() {\r\n        const{ timelines } = this.props;\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <ul className=\"timeline-list\">\r\n                {\r\n                    timelines.map((card,i) => (\r\n                        <TimelineCards key={i} {...card}/>\r\n                    ))\r\n                }\r\n               </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n       timelines:state.timeLine.timelines,\r\n       totalCount:state.timeLine.totalCount,\r\n       nextPage:state.timeLine.nextPage,\r\n       scrolling:state.timeLine.scrolling\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch)=>({\r\n    getTimeList : bindActionCreators(getTimeList,dispatch),\r\n    getTimeListLoad : bindActionCreators(getTimeListLoad,dispatch)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TimelineWrapper);","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport TimeLineWrapper from '../containers/TimelineWrapper/TimelineWrapper';\r\nimport './TimelinePage.scss';\r\n\r\nconst TimelinePage = () => {\r\n    return (\r\n        <PageTemplate>\r\n            <div className=\"cover\">\r\n                <h1 className=\"cover-title\">\r\n                    <span>제목</span>\r\n                    입니다\r\n                </h1>\r\n            </div>\r\n            <TimeLineWrapper/>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default TimelinePage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { createAuthEmailTk } from '../../store/modules/auth';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignUpWrapper extends Component {\r\n\r\n    state ={\r\n        email: '',\r\n        password:'',\r\n        name:'',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        console.log(email,password);\r\n        const {email,password} = this.state;\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createAuthEmailTk(this.state);\r\n    }\r\n    render() {\r\n        const { user, authError } = this.props;\r\n        if(!!user) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h5>회원가입</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" id=\"name\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn\">회원가입</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p>:''}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        isSignedIn : state.auth.isSignedIn,\r\n        user : state.auth.user,\r\n        authError : state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createAuthEmailTk : bindActionCreators(createAuthEmailTk,dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUpWrapper);","import React from 'react';\r\nimport PageTemplate from '../components/common/PageTemplate/PageTemplate';\r\nimport SignUpWrapper from '../containers/SignUpWrapper/SignUpWrapper';\r\n\r\nconst SignUpPage = () => {\r\n    return (\r\n        <PageTemplate>\r\n            <SignUpWrapper/>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default SignUpPage;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { AboutPage, SignInPage, SignUpPage, ContactPage, CreactContactPage, ContactDetailsPage, NotFoundPage, PortfolioPage, TimelinePage } from '../pages'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n\r\n            <Switch>\r\n                <Route exact path=\"/\" component={AboutPage} />\r\n                <Route exact path=\"/contact\" component={ContactPage} />\r\n                <Route path=\"/contact/:id\" component={ContactDetailsPage} />\r\n                <Route path=\"/create\" component={CreactContactPage} />\r\n                <Route path=\"/portfolio\" component={PortfolioPage} />\r\n                <Route path=\"/timeline\" component={TimelinePage} />\r\n                <Route path=\"/signin\" component={SignInPage} />\r\n                <Route path=\"/signup\" component={SignUpPage} />\r\n                {/* <Route path=\"\" component={} /> */}\r\n                <Route component={NotFoundPage} />    \r\n            </Switch>   \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { creatAction, handleActions } from 'redux-actions';\r\n\r\n// action type\r\n\r\n// action creators\r\n\r\n// initial state\r\nconst initialState ={};\r\n\r\n// reducer\r\nexport default handleActions({\r\n\r\n}, initialState);","import { default as contact} from './modules/contact';\r\nimport { default as portfolio} from './modules/portfolio';\r\nimport { default as timeLine} from './modules/timeLine';\r\nimport { default as auth} from './modules/auth';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\n   \r\nconst reducers = combineReducers({\r\n    contact,\r\n    portfolio,\r\n    timeLine,\r\n    auth\r\n});\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunk));\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nclass Root extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <App/>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from './Root';\r\nimport './style/common.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}